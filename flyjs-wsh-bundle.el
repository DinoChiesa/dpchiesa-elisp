;;; flyjs-wsh-bundle.el --- generated bundle of flymake-for-jslint-for-wsh.el and jshint.js
;;
;; generated Thu Mar 29 14:30:26 2012
;;

;;; flymake-for-jslint-for-wsh.el --- use flymake with js code, on Windows
;;
;; Author     : Dino Chiesa
;; Version    : 1.3.0
;; Keywords   : javascript js jslint flymake languages
;; URL        : http://code.google.com/p/jslint-for-wsh/
;; X-URL      : http://code.google.com/p/jslint-for-wsh/
;; Last-saved : <2012-March-28 21:14:20>
;; Package-Requires: ((flymake "0.3"))
;;
;; This code is distributed under the New BSD License.
;;
;; Copyright (c) 2010-2011, Dino Chiesa
;; All rights reserved.
;;
;; Redistribution and use in source and binary forms, with or without
;; modification, are permitted provided that the following conditions
;; are met:
;;
;; Redistributions of source code must retain the above copyright
;; notice, this list of conditions and the following disclaimer.
;;
;; Redistributions in binary form must reproduce the above copyright
;; notice, this list of conditions and the following disclaimer in the
;; documentation and/or other materials provided with the distribution.
;;
;; Neither the name of the author or any contributors, nor the names of
;; any organizations they belong to, may be used to endorse or promote
;; products derived from this software without specific prior written
;; permission.
;;
;; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
;; "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
;; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
;; A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
;; HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
;; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
;; BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
;; OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
;; AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
;; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
;; WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
;; POSSIBILITY OF SUCH DAMAGE.
;;
;;
;; Started from
;; http://www.emacswiki.org/emacs-en/FlymakeJavaScript
;;
;; .. and modified for use on Windows.
;;
;; To use this module, you need something like this in your .emacs file:
;;
;;   (defun my-javascript-mode-fn ()
;;     (require 'flymake)
;;     (require 'flymake-for-jslint-for-wsh)
;;     (setq flyjs-jslintwsh-location "c:\\users\\me\\bin\\jslint-for-wsh.js")
;;     (flymake-mode-on)
;;      ...
;;      )
;;
;;   ;; need only one of the following, whichever is right for you
;;   (add-hook 'javascript-mode-hook 'my-javascript-mode-fn)
;;   (add-hook 'espresso-mode-hook   'my-javascript-mode-fn)
;;   (add-hook 'js2-mode-hook        'my-javascript-mode-fn)


;;
;; Bugs:
;;
;;    - Not integrated with the flymake-for-jslint.el which is used on
;;      Linux. Really there shouldn't be separate .el files for Windows
;;      and Linux.  This should be combined with the Linux-oriented
;;      flymake-for-jslint.js ; it will then be one module generalized
;;      to support both Linux and windows.
;;
;;

(require 'flymake)

(defcustom flyjs-try-use-chakra t
  "Whether to try to use the Chakra engine on Windows.

It is possible to use the \"Chakra\" engine from IE9, from a
cscript.exe command. The benefit is, Javascript programs run
faster.

When this variable is non-nil, flymake-for-jslint-for-wsh will
look for the Chakra Javascript engine, and will use it if it is
available. If this variable is nil, or if the Chakra engine is
not available, then flymake-for-jslint-for-wsh will use the
default JScript engine (not at version 5.8) when running the
jslint program.

In most cases you should just leave this variable as t.

To make it possible to use Chakra, you will need at least IE9
installed on your computer, and you will need to modify your
registry to expose the Chakra engine to cscript.exe.

To do the registry mod, save the following into a .reg file, and
run it:

    Windows Registry Editor Version 5.00

    [HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\{16d51579-a30b-4c8b-a276-0ff4dc41e755}\\ProgID]
    @=\"Chakra\"

    [HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\Wow6432Node\\CLSID\\{16d51579-a30b-4c8b-a276-0ff4dc41e755}\\ProgID]
    @=\"Chakra\"

    [HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\Chakra]
    @=\"JScript Language\"

    [HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\Chakra\\CLSID]
    @=\"{16d51579-a30b-4c8b-a276-0ff4dc41e755}\"

    [HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\Chakra\\OLEScript]

")

(defvar flyjs--language-name nil
  "This is the name of the language that will be requested on the
cscript.exe command line when running the jslint program.

flymake-for-javascript-for-wsh tries to infer the name by
examining the registry, the first time you use
flymake-for-javascript-for-wsh.  It selects Chakra if it is
available and selects Jscript otherwise.

You can force this module to always use JScript by setting
`flyjs-try-use-chakra' to nil, before calling require on this
module.  You can also override what the module selects, by
setting this variable manually in your .emacs.  Take care to set
it to only JScript, Javascript, or a legal Javascript-compatible
language string that can be understood by cscript.exe's //E option. ")



(defun flyjs--reg-read (regpath)
  "read a path in the Windows registry"
  (let ((reg.exe (concat (getenv "windir") "\\system32\\reg.exe"))
        tokens last-token)

    (setq reg-value (shell-command-to-string
                     (concat reg.exe " query " regpath))
          tokens (split-string reg-value nil t)
          last-token (nth (1- (length tokens)) tokens))

    (and (not (string= last-token "value.")) last-token)))



;; (defun flyjs--reg-read (regpath)
;;   "read a path in the Windows registry"
;;   (let ((temp-f (make-temp-file "regread_" nil ".js"))
;;         (js-code "var WSHShell, value, regpath = '';try{ if (WScript.Arguments.length > 0){ regpath = WScript.Arguments(0); WSHShell = WScript.CreateObject('WScript.Shell'); value = WSHShell.RegRead(regpath); WScript.Echo(value); }}catch (e1){ WScript.Echo('error reading registry: ' + e1);}")
;;         reg-value)
;;
;;   (with-temp-file temp-f
;;     (insert js-code))
;;
;;   (setq reg-value
;;         (shell-command-to-string
;;          (concat temp-f " " regpath)))
;;
;;   (delete-file temp-f)
;;   reg-value ))


(defcustom flyjs-jslintwsh-location "\\bin\\jslint-for-wsh.js"
  "Location of the jslint.js script.

The jslint script specified here must be modified from the
standard jslint available from jslint.com, in order to accept
command-line arguments, and to run within WSH.

The latest official version of jslint-for-wsh.js can be obtained from
http://code.google.com/p/jslint-for-wsh/

You can also use jshint, which can be configured to be much less
strict than jslint. It also must be modified to accept
command-line arguments

If you'd like to perform the modifications yourself, follow these
instructions.  Download jslint.js or jshint.js .  Append to the
end of the file, this stanza:

    (function () {
        'use strict';
        var filename = 'stdin', content = '', fso, fs, i, e, line, linter, label,
            options = {
                wsh        : true,  // WScript is allowed (JSHINT)
                windows    : true,  // WScript is allowed (JSLINT)
                white      : true,  // true: 'sloppy' whitespace is ok
                plusplus   : true,  // true == ok to use ++
                properties : false, // do not barf on any undeclared properties
                passfail   : false, // do not stop after first error
                radix      : true   // do not puke on parseInt() with no radix
            };

        if (WScript.Arguments.length > 0) {
            filename = WScript.Arguments(0);
            fso = new ActiveXObject('Scripting.FileSystemObject');
            //var file = fso.GetFile(filename);
            fs = fso.OpenTextFile(filename, 1);
            content = fs.ReadAll();
            fs.Close();
            fso = null;
            fs = null;
        } else {
            content = WScript.StdIn.ReadAll();
        }

        if (typeof JSHINT === 'function') {
            linter = JSHINT;
            label = 'JSHINT';
        }
        else if (typeof JSLINT === 'function') {
            linter = JSLINT;
            label = 'JSLINT';
        }
        else {
            throw 'no lint available.';
        }

        if (!linter(content, options)) {
            WScript.StdErr.WriteLine(label);
            for (i = 0; i < linter.errors.length; i++) {
                // sample error msg:
                //  sprintf.js(53,42) JSLINT: Use the array literal notation [].
                e = linter.errors[i];
                if (e !== null) {
                    line = (typeof e.line === 'undefined') ? '0' : e.line;
                    WScript.StdErr.WriteLine(filename + '(' + line + ',' + e.character +
                                             ') ' + label + ': ' + e.reason);
                    WScript.StdErr.WriteLine('    ' + (e.evidence || '').replace(/^\\s*(\\S*(\\s+\\S+)*)\\s*$/, '$1'));
                }
            }
        }
    }());

This change does two things:

1. allows you to specify the file to lint-check, on the command
   line, rather than as stdin. Stdin still works if no file is
   specified at all.

2. emits the error messages in a format that is more similar to
   most C/C++ compilers.

The first change allows you to invoke jslint.js from the command
line, or from within emacs with M-x compile. The second change
allows you to interpet error messages with M-x next-error.
"
  :type 'string :group 'flyjs
  )

;; consider several options for the .js extension  on the flymake thing
(defvar flyjs--js-keys '("\\.js\\'"  "\\.js\\$" ".+\\.js\\'" ".+\\.js\\$"))


(defun flyjs-init ()
  (let* ((temp-file (flymake-init-create-temp-buffer-copy
                     'flymake-create-temp-inplace))
         (file-without-path (file-relative-name
                             temp-file
                             (file-name-directory buffer-file-name)))
         (cscript-exe (concat (getenv "windir")
                              "\\system32\\cscript.exe"))
         (jslint-loc (expand-file-name flyjs-jslintwsh-location)))
    (if (not (file-exists-p jslint-loc))
        (error "Please set flyjs-jslintwsh-location to an actual location.")
      (list cscript-exe (list jslint-loc file-without-path
                              (concat "//E:" flyjs--language-name))))))



(defun flyjs-install ()
  "installs flymake-for-jslint-for-wsh logic into flymake. This
fn does several things:

  - select the Javascript engine to use with cscript.exe. (See
    `flyjs-try-use-chakra')

  - modify `flymake-err-line-patterns' to include a pattern for
    JSLINT or JSHINT

  - modify `flymake-allowed-file-name-masks' to make sure the
    jslint-for-wsh command is invoked by flymake.

"
  (setq flyjs--language-name
        (if (and flyjs-try-use-chakra
            (string=
             (upcase
              (flyjs--reg-read "HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\Chakra\\CLSID\\"))
             "{16D51579-A30B-4C8B-A276-0FF4DC41E755}"))
            "Chakra" "JScript")

        flymake-err-line-patterns
        (cons '("^[ \t]*\\([A-Za-z.0-9_: \\-]+\\)(\\([0-9]+\\)[,]\\( *[0-9]+\\))\\( Microsoft JScript runtime error\\| JSLINT\\| JSHINT\\): \\(.+\\)$"
                1 2 3 5)
              flymake-err-line-patterns))

  ;; look for various keys for javascript files
  (let ((keys flyjs--js-keys)
        key
        found
        jsentry)
    (while (and keys (not found))
      (setq key (car keys)
            jsentry (assoc key flymake-allowed-file-name-masks))
      (if jsentry
          (progn
            (setcdr jsentry '(flyjs-init
                              flymake-simple-cleanup
                              flymake-get-real-file-name))
            (setq found t)))
      (setq keys (cdr keys)))
    (if (not found)
        (add-to-list
         'flymake-allowed-file-name-masks
         (list (car flyjs--js-keys)
               'flyjs-init 'flymake-simple-cleanup 'flymake-get-real-file-name)))))

(flyjs-install)

(provide 'flymake-for-jslint-for-wsh)

;;; flymake-for-jslint-for-wsh.el ends here


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; this is the embedded source code

(setq flyjs-jshint-for-wsh-src "/*!\n* JSHint, by JSHint Community.\n*\n* Licensed under the same slightly modified MIT license that JSLint is.\n* It stops evil-doers everywhere.\n*\n* JSHint is a derivative work of JSLint:\n*\n*   Copyright (c) 2002 Douglas Crockford  (www.JSLint.com)\n*\n*   Permission is hereby granted, free of charge, to any person obtaining\n*   a copy of this software and associated documentation files (the \"Software\"),\n*   to deal in the Software without restriction, including without limitation\n*   the rights to use, copy, modify, merge, publish, distribute, sublicense,\n*   and/or sell copies of the Software, and to permit persons to whom\n*   the Software is furnished to do so, subject to the following conditions:\n*\n*   The above copyright notice and this permission notice shall be included\n*   in all copies or substantial portions of the Software.\n*\n*   The Software shall be used for Good, not Evil.\n*\n*   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n*   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n*   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n*   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n*   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n*   FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n*   DEALINGS IN THE SOFTWARE.\n*\n* JSHint was forked from 2010-12-16 edition of JSLint.\n*\n*/\n/*\nJSHINT is a global function. It takes two parameters.\nvar myResult=JSHINT(source, option);The first parameter is either a string or an array of strings. If it is a\nstring, it will be split on '\\n' or '\\r'. If it is an array of strings, it\nis assumed that each string represents one line. The source can be a\nJavaScript text or a JSON text.\nThe second parameter is an optional object of options which control the\noperation of JSHINT. Most of the options are booleans: They are all\noptional and have a default value of false. One of the options, predef,\ncan be an array of names, which will be used to declare global variables,\nor an object whose keys are used as global names, with a boolean value\nthat determines if they are assignable.\nIf it checks out, JSHINT returns true. Otherwise, it returns false.\nIf false, you can inspect JSHINT.errors to find out the problems.\nJSHINT.errors is an array of objects containing these members:\n{line:The line (relative to 0) at which the lint was found\ncharacter:The character (relative to 0) at which the lint was found\nreason:The problem\nevidence:The text line in which the problem occurred\nraw:The raw message before the details were inserted\na:The first detail\nb:The second detail\nc:The third detail\nd:The fourth detail}If a fatal error was found, a null will be the last element of the\nJSHINT.errors array.\nYou can request a Function Report, which shows all of the functions\nand the parameters and vars that they use. This can be used to find\nimplied global variables and other problems. The report is in HTML and\ncan be inserted in an HTML <body>.\nvar myReport=JSHINT.report(limited);If limited is true, then the report will be limited to only errors.\nYou can request a data structure which contains JSHint's results.\nvar myData=JSHINT.data();It returns a structure with this form:\n{errors: [\n{line: NUMBER,\ncharacter: NUMBER,\nreason: STRING,\nevidence: STRING}],\nfunctions: [\nname: STRING,\nline: NUMBER,\nlast: NUMBER,\nparam: [\nSTRING\n],\nclosure: [\nSTRING\n],\nvar: [\nSTRING\n],\nexception: [\nSTRING\n],\nouter: [\nSTRING\n],\nunused: [\nSTRING\n],\nglobal: [\nSTRING\n],\nlabel: [\nSTRING\n]\n],\nglobals: [\nSTRING\n],\nmember: {STRING: NUMBER},\nunused: [\n{name: STRING,\nline: NUMBER}],\nimplieds: [\n{name: STRING,\nline: NUMBER}],\nurls: [\nSTRING\n],\njson: BOOLEAN}Empty arrays will not be included.\n*/\n/*jshint\nevil: true, nomen: false, onevar: false, regexp: false, strict: true, boss: true,\nundef: true, maxlen: 100, indent:4\n*/\n/*members \"\\b\", \"\\t\", \"\\n\", \"\\f\", \"\\r\", \"!=\", \"!==\", \"\\\"\", \"%\", \"(begin)\",\n\"(breakage)\", \"(context)\", \"(error)\", \"(global)\", \"(identifier)\", \"(last)\",\n\"(line)\", \"(loopage)\", \"(name)\", \"(onevar)\", \"(params)\", \"(scope)\",\n\"(statement)\", \"(verb)\", \"*\", \"+\", \"++\", \"-\", \"--\", \"\\/\", \"<\", \"<=\", \"==\",\n\"===\", \">\", \">=\", $, $$, $A, $F, $H, $R, $break, $continue, $w, Abstract, Ajax,\n__filename, __dirname, ActiveXObject, Array, ArrayBuffer, ArrayBufferView, Audio,\nAutocompleter, Assets, Boolean, Builder, Buffer, Browser, COM, CScript, Canvas,\nCustomAnimation, Class, Control, Chain, Color, Cookie, Core, DataView, Date,\nDebug, Draggable, Draggables, Droppables, Document, DomReady, DOMReady, DOMParser, Drag,\nE, Enumerator, Enumerable, Element, Elements, Error, Effect, EvalError, Event,\nEvents, FadeAnimation, Field, Flash, Float32Array, Float64Array, Form,\nFormField, Frame, FormData, Function, Fx, GetObject, Group, Hash, HotKey,\nHTMLElement, HTMLAnchorElement, HTMLBaseElement, HTMLBlockquoteElement,\nHTMLBodyElement, HTMLBRElement, HTMLButtonElement, HTMLCanvasElement, HTMLDirectoryElement,\nHTMLDivElement, HTMLDListElement, HTMLFieldSetElement,\nHTMLFontElement, HTMLFormElement, HTMLFrameElement, HTMLFrameSetElement,\nHTMLHeadElement, HTMLHeadingElement, HTMLHRElement, HTMLHtmlElement,\nHTMLIFrameElement, HTMLImageElement, HTMLInputElement, HTMLIsIndexElement,\nHTMLLabelElement, HTMLLayerElement, HTMLLegendElement, HTMLLIElement,\nHTMLLinkElement, HTMLMapElement, HTMLMenuElement, HTMLMetaElement,\nHTMLModElement, HTMLObjectElement, HTMLOListElement, HTMLOptGroupElement,\nHTMLOptionElement, HTMLParagraphElement, HTMLParamElement, HTMLPreElement,\nHTMLQuoteElement, HTMLScriptElement, HTMLSelectElement, HTMLStyleElement,\nHtmlTable, HTMLTableCaptionElement, HTMLTableCellElement, HTMLTableColElement,\nHTMLTableElement, HTMLTableRowElement, HTMLTableSectionElement,\nHTMLTextAreaElement, HTMLTitleElement, HTMLUListElement, HTMLVideoElement,\nIframe, IframeShim, Image, Int16Array, Int32Array, Int8Array,\nInsertion, InputValidator, JSON, Keyboard, Locale, LN10, LN2, LOG10E, LOG2E,\nMAX_VALUE, MIN_VALUE, Mask, Math, MenuItem, MessageChannel, MessageEvent, MessagePort,\nMoveAnimation, MooTools, Native, NEGATIVE_INFINITY, Number, Object, ObjectRange, Option,\nOptions, OverText, PI, POSITIVE_INFINITY, PeriodicalExecuter, Point, Position, Prototype,\nRangeError, Rectangle, ReferenceError, RegExp, ResizeAnimation, Request, RotateAnimation,\nSQRT1_2, SQRT2, ScrollBar, ScriptEngine, ScriptEngineBuildVersion,\nScriptEngineMajorVersion, ScriptEngineMinorVersion, Scriptaculous, Scroller,\nSlick, Slider, Selector, SharedWorker, String, Style, SyntaxError, Sortable, Sortables,\nSortableObserver, Sound, Spinner, System, Swiff, Text, TextArea, Template,\nTimer, Tips, Type, TypeError, Toggle, Try, \"use strict\", unescape, URI, URIError, URL,\nVBArray, WSH, WScript, XDomainRequest, Web, Window, XMLDOM, XMLHttpRequest, XMLSerializer,\nXPathEvaluator, XPathException, XPathExpression, XPathNamespace, XPathNSResolver, XPathResult,\n\"\\\\\", a, addEventListener, address, alert, apply, applicationCache, arguments, arity, asi, atob,\nb, basic, basicToken, bitwise, block, blur, boolOptions, boss, browser, btoa, c, call, callee,\ncaller, cases, charAt, charCodeAt, character, clearInterval, clearTimeout,\nclose, closed, closure, comment, condition, confirm, console, constructor,\ncontent, couch, create, css, curly, d, data, datalist, dd, debug, decodeURI,\ndecodeURIComponent, defaultStatus, defineClass, deserialize, devel, document,\ndojo, dijit, dojox, define, else, emit, encodeURI, encodeURIComponent,\nentityify, eqeqeq, eqnull, errors, es5, escape, esnext, eval, event, evidence, evil,\nex, exception, exec, exps, expr, exports, FileReader, first, floor, focus,\nforin, fragment, frames, from, fromCharCode, fud, funcscope, funct, function, functions,\ng, gc, getComputedStyle, getRow, getter, getterToken, GLOBAL, global, globals, globalstrict,\nhasOwnProperty, help, history, i, id, identifier, immed, implieds, importPackage, include,\nindent, indexOf, init, ins, instanceOf, isAlpha, isApplicationRunning, isArray,\nisDigit, isFinite, isNaN, iterator, java, join, jshint,\nJSHINT, json, jquery, jQuery, keys, label, labelled, last, lastsemic, laxbreak, laxcomma,\nlatedef, lbp, led, left, length, line, load, loadClass, localStorage, location,\nlog, loopfunc, m, match, maxerr, maxlen, member,message, meta, module, moveBy,\nmoveTo, mootools, multistr, name, navigator, new, newcap, noarg, node, noempty, nomen,\nnonew, nonstandard, nud, onbeforeunload, onblur, onerror, onevar, onecase, onfocus,\nonload, onresize, onunload, open, openDatabase, openURL, opener, opera, options, outer, param,\nparent, parseFloat, parseInt, passfail, plusplus, predef, print, process, prompt,\nproto, prototype, prototypejs, provides, push, quit, range, raw, reach, reason, regexp,\nreadFile, readUrl, regexdash, removeEventListener, replace, report, require,\nreserved, resizeBy, resizeTo, resolvePath, resumeUpdates, respond, rhino, right,\nrunCommand, scroll, screen, scripturl, scrollBy, scrollTo, scrollbar, search, seal,\nsend, serialize, sessionStorage, setInterval, setTimeout, setter, setterToken, shift, slice,\nsmarttabs, sort, spawn, split, stack, status, start, strict, sub, substr, supernew, shadow,\nsupplant, sum, sync, test, toLowerCase, toString, toUpperCase, toint32, token, top, trailing,\ntype, typeOf, Uint16Array, Uint32Array, Uint8Array, undef, undefs, unused, urls, validthis,\nvalue, valueOf, var, version, WebSocket, withstmt, white, window, Worker, wsh*/\n/*global exports: false */\nvar JSHINT=(function () {\"use strict\";var anonname,\nbang={'<':true,\n'<=':true,\n'==':true,\n'===': true,\n'!==': true,\n'!=':true,\n'>':true,\n'>=':true,\n'+':true,\n'-':true,\n'*':true,\n'/':true,\n'%':true},\nboolOptions={asi:true,\nbitwise:true,\nboss:true,\nbrowser:true,\ncouch:true,\ncurly:true,\ndebug:true,\ndevel:true,\ndojo:true,\neqeqeq:true,\neqnull:true,\nes5:true,\nesnext:true,\nevil:true,\nexpr:true,\nforin:true,\nfuncscope:true,\nglobalstrict: true,\nimmed:true,\niterator:true,\njquery:true,\nlastsemic:true,\nlatedef:true,\nlaxbreak:true,\nlaxcomma:true,\nloopfunc:true,\nmootools:true,\nmultistr:true,\nnewcap:true,\nnoarg:true,\nnode:true,\nnoempty:true,\nnonew:true,\nnonstandard:true,\nnomen:true,\nonevar:true,\nonecase:true,\npassfail:true,\nplusplus:true,\nproto:true,\nprototypejs:true,\nregexdash:true,\nregexp:true,\nrhino:true,\nundef:true,\nscripturl:true,\nshadow:true,\nsmarttabs:true,\nstrict:true,\nsub:true,\nsupernew:true,\ntrailing:true,\nvalidthis:true,\nwithstmt:true,\nwhite:true,\nwsh:true},\nvalOptions={maxlen: false,\nindent: false,\nmaxerr: false,\npredef: false},\nbrowser={ArrayBuffer:false,\nArrayBufferView:false,\nAudio:false,\naddEventListener:false,\napplicationCache:false,\natob:false,\nblur:false,\nbtoa:false,\nclearInterval:false,\nclearTimeout:false,\nclose:false,\nclosed:false,\nDataView:false,\nDOMParser:false,\ndefaultStatus:false,\ndocument:false,\nevent:false,\nFileReader:false,\nFloat32Array:false,\nFloat64Array:false,\nFormData:false,\nfocus:false,\nframes:false,\ngetComputedStyle:false,\nHTMLElement:false,\nHTMLAnchorElement:false,\nHTMLBaseElement:false,\nHTMLBlockquoteElement:false,\nHTMLBodyElement:false,\nHTMLBRElement:false,\nHTMLButtonElement:false,\nHTMLCanvasElement:false,\nHTMLDirectoryElement:false,\nHTMLDivElement:false,\nHTMLDListElement:false,\nHTMLFieldSetElement:false,\nHTMLFontElement:false,\nHTMLFormElement:false,\nHTMLFrameElement:false,\nHTMLFrameSetElement:false,\nHTMLHeadElement:false,\nHTMLHeadingElement:false,\nHTMLHRElement:false,\nHTMLHtmlElement:false,\nHTMLIFrameElement:false,\nHTMLImageElement:false,\nHTMLInputElement:false,\nHTMLIsIndexElement:false,\nHTMLLabelElement:false,\nHTMLLayerElement:false,\nHTMLLegendElement:false,\nHTMLLIElement:false,\nHTMLLinkElement:false,\nHTMLMapElement:false,\nHTMLMenuElement:false,\nHTMLMetaElement:false,\nHTMLModElement:false,\nHTMLObjectElement:false,\nHTMLOListElement:false,\nHTMLOptGroupElement:false,\nHTMLOptionElement:false,\nHTMLParagraphElement:false,\nHTMLParamElement:false,\nHTMLPreElement:false,\nHTMLQuoteElement:false,\nHTMLScriptElement:false,\nHTMLSelectElement:false,\nHTMLStyleElement:false,\nHTMLTableCaptionElement:false,\nHTMLTableCellElement:false,\nHTMLTableColElement:false,\nHTMLTableElement:false,\nHTMLTableRowElement:false,\nHTMLTableSectionElement:false,\nHTMLTextAreaElement:false,\nHTMLTitleElement:false,\nHTMLUListElement:false,\nHTMLVideoElement:false,\nhistory:false,\nInt16Array:false,\nInt32Array:false,\nInt8Array:false,\nImage:false,\nlength:false,\nlocalStorage:false,\nlocation:false,\nMessageChannel:false,\nMessageEvent:false,\nMessagePort:false,\nmoveBy:false,\nmoveTo:false,\nname:false,\nnavigator:false,\nonbeforeunload:true,\nonblur:true,\nonerror:true,\nonfocus:true,\nonload:true,\nonresize:true,\nonunload:true,\nopen:false,\nopenDatabase:false,\nopener:false,\nOption:false,\nparent:false,\nprint:false,\nremoveEventListener:false,\nresizeBy:false,\nresizeTo:false,\nscreen:false,\nscroll:false,\nscrollBy:false,\nscrollTo:false,\nsessionStorage:false,\nsetInterval:false,\nsetTimeout:false,\nSharedWorker:false,\nstatus:false,\ntop:false,\nUint16Array:false,\nUint32Array:false,\nUint8Array:false,\nWebSocket:false,\nwindow:false,\nWorker:false,\nXMLHttpRequest:false,\nXMLSerializer:false,\nXPathEvaluator:false,\nXPathException:false,\nXPathExpression:false,\nXPathNamespace:false,\nXPathNSResolver:false,\nXPathResult:false},\ncouch={\"require\":false,\nrespond:false,\ngetRow:false,\nemit:false,\nsend:false,\nstart:false,\nsum:false,\nlog:false,\nexports:false,\nmodule:false,\nprovides:false},\ndevel={alert:false,\nconfirm:false,\nconsole:false,\nDebug:false,\nopera:false,\nprompt:false},\ndojo={dojo:false,\ndijit:false,\ndojox:false,\ndefine:false,\n\"require\":false},\nescapes={'\\b': '\\\\b',\n'\\t': '\\\\t',\n'\\n': '\\\\n',\n'\\f': '\\\\f',\n'\\r': '\\\\r',\n'\"':'\\\\\"',\n'/':'\\\\/',\n'\\\\': '\\\\\\\\'},\nfunct,\nfunctionicity=[\n'closure', 'exception', 'global', 'label',\n'outer', 'unused', 'var'\n],\nfunctions,\nglobal,\nimplied,\ninblock,\nindent,\njsonmode,\njquery={'$':false,\njQuery:false},\nlines,\nlookahead,\nmember,\nmembersOnly,\nmootools={'$':false,\n'$$':false,\nAssets:false,\nBrowser:false,\nChain:false,\nClass:false,\nColor:false,\nCookie:false,\nCore:false,\nDocument:false,\nDomReady:false,\nDOMReady:false,\nDrag:false,\nElement:false,\nElements:false,\nEvent:false,\nEvents:false,\nFx:false,\nGroup:false,\nHash:false,\nHtmlTable:false,\nIframe:false,\nIframeShim:false,\nInputValidator:false,\ninstanceOf:false,\nKeyboard:false,\nLocale:false,\nMask:false,\nMooTools:false,\nNative:false,\nOptions:false,\nOverText:false,\nRequest:false,\nScroller:false,\nSlick:false,\nSlider:false,\nSortables:false,\nSpinner:false,\nSwiff:false,\nTips:false,\nType:false,\ntypeOf:false,\nURI:false,\nWindow:false},\nnexttoken,\nnode={__filename:false,\n__dirname:false,\nBuffer:false,\nconsole:false,\nexports:false,\nGLOBAL:false,\nglobal:false,\nmodule:false,\nprocess:false,\nrequire:false,\nsetTimeout:false,\nclearTimeout:false,\nsetInterval:false,\nclearInterval:false},\nnoreach,\noption,\npredefined,\nprereg,\nprevtoken,\nprototypejs={'$':false,\n'$$':false,\n'$A':false,\n'$F':false,\n'$H':false,\n'$R':false,\n'$break':false,\n'$continue':false,\n'$w':false,\nAbstract:false,\nAjax:false,\nClass:false,\nEnumerable:false,\nElement:false,\nEvent:false,\nField:false,\nForm:false,\nHash:false,\nInsertion:false,\nObjectRange:false,\nPeriodicalExecuter: false,\nPosition:false,\nPrototype:false,\nSelector:false,\nTemplate:false,\nToggle:false,\nTry:false,\nAutocompleter:false,\nBuilder:false,\nControl:false,\nDraggable:false,\nDraggables:false,\nDroppables:false,\nEffect:false,\nSortable:false,\nSortableObserver:false,\nSound:false,\nScriptaculous:false},\nrhino={defineClass:false,\ndeserialize:false,\ngc:false,\nhelp:false,\nimportPackage: false,\n\"java\":false,\nload:false,\nloadClass:false,\nprint:false,\nquit:false,\nreadFile:false,\nreadUrl:false,\nrunCommand:false,\nseal:false,\nserialize:false,\nspawn:false,\nsync:false,\ntoint32:false,\nversion:false},\nscope,\nstack,\nstandard={Array:false,\nBoolean:false,\nDate:false,\ndecodeURI:false,\ndecodeURIComponent:false,\nencodeURI:false,\nencodeURIComponent:false,\nError:false,\n'eval':false,\nEvalError:false,\nFunction:false,\nhasOwnProperty:false,\nisFinite:false,\nisNaN:false,\nJSON:false,\nMath:false,\nNumber:false,\nObject:false,\nparseInt:false,\nparseFloat:false,\nRangeError:false,\nReferenceError:false,\nRegExp:false,\nString:false,\nSyntaxError:false,\nTypeError:false,\nURIError:false},\nnonstandard={escape:false,\nunescape:false},\nstandard_member={E:true,\nLN2:true,\nLN10:true,\nLOG2E:true,\nLOG10E:true,\nMAX_VALUE:true,\nMIN_VALUE:true,\nNEGATIVE_INFINITY:true,\nPI:true,\nPOSITIVE_INFINITY:true,\nSQRT1_2:true,\nSQRT2:true},\ndirective,\nsyntax={},\ntab,\ntoken,\nurls,\nuseESNextSyntax,\nwarnings,\nwsh={ActiveXObject:true,\nEnumerator:true,\nGetObject:true,\nScriptEngine:true,\nScriptEngineBuildVersion:true,\nScriptEngineMajorVersion:true,\nScriptEngineMinorVersion:true,\nVBArray:true,\nWSH:true,\nWScript:true,\nXDomainRequest:true};var ax, cx, tx, nx, nxg, lx, ix, jx, ft;(function () {/*jshint maxlen:300 */\nax=/@cc|<\\/?|script|\\]\\s*\\]|<\\s*!|&lt/i;cx=/[\\u0000-\\u001f\\u007f-\\u009f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/;tx=/^\\s*([(){}\\[.,:;'\"~\\?\\]#@]|==?=?|\\/(\\*(jshint|jslint|members?|global)?|=|\\/)?|\\*[\\/=]?|\\+(?:=|\\++)?|-(?:=|-+)?|%=?|&[&=]?|\\|[|=]?|>>?>?=?|<([\\/=!]|\\!(\\[|--)?|<=?)?|\\^=?|\\!=?=?|[a-zA-Z_$][a-zA-Z0-9_$]*|[0-9]+([xX][0-9a-fA-F]+|\\.[0-9]*)?([eE][+\\-]?[0-9]+)?)/;nx=/[\\u0000-\\u001f&<\"\\/\\\\\\u007f-\\u009f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/;nxg=/[\\u0000-\\u001f&<\"\\/\\\\\\u007f-\\u009f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g;lx=/\\*\\/|\\/\\*/;ix=/^([a-zA-Z_$][a-zA-Z0-9_$]*)$/;jx=/^(?:javascript|jscript|ecmascript|vbscript|mocha|livescript)\\s*:/i;ft=/^\\s*\\/\\*\\s*falls\\sthrough\\s*\\*\\/\\s*$/;}());function F() {}function is_own(object, name) {return Object.prototype.hasOwnProperty.call(object, name);}function checkOption(name, t) {if (valOptions[name] === undefined && boolOptions[name] === undefined) {warning(\"Bad option: '\" + name + \"'.\", t);}}if (typeof Array.isArray !== 'function') {Array.isArray=function (o) {return Object.prototype.toString.apply(o) === '[object Array]';};}if (typeof Object.create !== 'function') {Object.create=function (o) {F.prototype=o;return new F();};}if (typeof Object.keys !== 'function') {Object.keys=function (o) {var a=[], k;for (k in o) {if (is_own(o, k)) {a.push(k);}}return a;};}if (typeof String.prototype.entityify !== 'function') {String.prototype.entityify=function () {return this\n.replace(/&/g, '&amp;')\n.replace(/</g, '&lt;')\n.replace(/>/g, '&gt;');};}if (typeof String.prototype.isAlpha !== 'function') {String.prototype.isAlpha=function () {return (this >= 'a' && this <= 'z\\uffff') ||\n(this >= 'A' && this <= 'Z\\uffff');};}if (typeof String.prototype.isDigit !== 'function') {String.prototype.isDigit=function () {return (this >= '0' && this <= '9');};}if (typeof String.prototype.supplant !== 'function') {String.prototype.supplant=function (o) {return this.replace(/\\{([^{}]*)\\}/g, function (a, b) {var r=o[b];return typeof r === 'string' || typeof r === 'number' ? r:a;});};}if (typeof String.prototype.name !== 'function') {String.prototype.name=function () {if (ix.test(this)) {return this;}if (nx.test(this)) {return '\"' + this.replace(nxg, function (a) {var c=escapes[a];if (c) {return c;}return '\\\\u' + ('0000' + a.charCodeAt().toString(16)).slice(-4);}) + '\"';}return '\"' + this + '\"';};}function combine(t, o) {var n;for (n in o) {if (is_own(o, n)) {t[n]=o[n];}}}function assume() {if (option.couch) {combine(predefined, couch);}if (option.rhino) {combine(predefined, rhino);}if (option.prototypejs) {combine(predefined, prototypejs);}if (option.node) {combine(predefined, node);option.globalstrict=true;}if (option.devel) {combine(predefined, devel);}if (option.dojo) {combine(predefined, dojo);}if (option.browser) {combine(predefined, browser);}if (option.nonstandard) {combine(predefined, nonstandard);}if (option.jquery) {combine(predefined, jquery);}if (option.mootools) {combine(predefined, mootools);}if (option.wsh) {combine(predefined, wsh);}if (option.esnext) {useESNextSyntax();}if (option.globalstrict && option.strict !== false) {option.strict=true;}}function quit(message, line, chr) {var percentage=Math.floor((line / lines.length) * 100);throw {name: 'JSHintError',\nline: line,\ncharacter: chr,\nmessage: message + \" (\" + percentage + \"% scanned).\",\nraw: message};}function isundef(scope, m, t, a) {return JSHINT.undefs.push([scope, m, t, a]);}function warning(m, t, a, b, c, d) {var ch, l, w;t=t || nexttoken;if (t.id === '(end)') {t=token;}l=t.line || 0;ch=t.from || 0;w={id: '(error)',\nraw: m,\nevidence: lines[l - 1] || '',\nline: l,\ncharacter: ch,\na: a,\nb: b,\nc: c,\nd: d};w.reason=m.supplant(w);JSHINT.errors.push(w);if (option.passfail) {quit('Stopping. ', l, ch);}warnings += 1;if (warnings >= option.maxerr) {quit(\"Too many errors.\", l, ch);}return w;}function warningAt(m, l, ch, a, b, c, d) {return warning(m, {line: l,\nfrom: ch}, a, b, c, d);}function error(m, t, a, b, c, d) {var w=warning(m, t, a, b, c, d);}function errorAt(m, l, ch, a, b, c, d) {return error(m, {line: l,\nfrom: ch}, a, b, c, d);}var lex=(function lex() {var character, from, line, s;function nextLine() {var at,\ntw;if (line >= lines.length)\nreturn false;character=1;s=lines[line];line += 1;if (option.smarttabs)\nat=s.search(/ \\t/);else\nat=s.search(/ \\t|\\t /);if (at >= 0)\nwarningAt(\"Mixed spaces and tabs.\", line, at + 1);s=s.replace(/\\t/g, tab);at=s.search(cx);if (at >= 0)\nwarningAt(\"Unsafe character.\", line, at);if (option.maxlen && option.maxlen < s.length)\nwarningAt(\"Line too long.\", line, s.length);tw=option.trailing && s.match(/^(.*?)\\s+$/);if (tw && !/^\\s+$/.test(s)) {warningAt(\"Trailing whitespace.\", line, tw[1].length + 1);}return true;}function it(type, value) {var i, t;if (type === '(color)' || type === '(range)') {t={type: type};} else if (type === '(punctuator)' ||\n(type === '(identifier)' && is_own(syntax, value))) {t=syntax[value] || syntax['(error)'];} else {t=syntax[type];}t=Object.create(t);if (type === '(string)' || type === '(range)') {if (!option.scripturl && jx.test(value)) {warningAt(\"Script URL.\", line, from);}}if (type === '(identifier)') {t.identifier=true;if (value === '__proto__' && !option.proto) {warningAt(\"The '{a}' property is deprecated.\",\nline, from, value);} else if (value === '__iterator__' && !option.iterator) {warningAt(\"'{a}' is only available in JavaScript 1.7.\",\nline, from, value);} else if (option.nomen && (value.charAt(0) === '_' ||\nvalue.charAt(value.length - 1) === '_')) {if (!option.node || token.id === '.' ||\n(value !== '__dirname' && value !== '__filename')) {warningAt(\"Unexpected {a} in '{b}'.\", line, from, \"dangling '_'\", value);}}}t.value=value;t.line=line;t.character=character;t.from=from;i=t.id;if (i !== '(endline)') {prereg=i &&\n(('(,=:[!&|?{};'.indexOf(i.charAt(i.length - 1)) >= 0) ||\ni === 'return' ||\ni === 'case');}return t;}return {init: function (source) {if (typeof source === 'string') {lines=source\n.replace(/\\r\\n/g, '\\n')\n.replace(/\\r/g, '\\n')\n.split('\\n');} else {lines=source;}if (lines[0] && lines[0].substr(0, 2) === '#!')\nlines[0]='';line=0;nextLine();from=1;},\nrange: function (begin, end) {var c, value='';from=character;if (s.charAt(0) !== begin) {errorAt(\"Expected '{a}' and instead saw '{b}'.\",\nline, character, begin, s.charAt(0));}for (;;) {s=s.slice(1);character += 1;c=s.charAt(0);switch (c) {case '':\nerrorAt(\"Missing '{a}'.\", line, character, c);break;case end:\ns=s.slice(1);character += 1;return it('(range)', value);case '\\\\':\nwarningAt(\"Unexpected '{a}'.\", line, character, c);}value += c;}},\ntoken: function () {var b, c, captures, d, depth, high, i, l, low, q, t, isLiteral, isInRange, n;function match(x) {var r=x.exec(s), r1;if (r) {l=r[0].length;r1=r[1];c=r1.charAt(0);s=s.substr(l);from=character + l - r1.length;character += l;return r1;}}function string(x) {var c, j, r='', allowNewLine=false;if (jsonmode && x !== '\"') {warningAt(\"Strings must use doublequote.\",\nline, character);}function esc(n) {var i=parseInt(s.substr(j + 1, n), 16);j += n;if (i >= 32 && i <= 126 &&\ni !== 34 && i !== 92 && i !== 39) {warningAt(\"Unnecessary escapement.\", line, character);}character += n;c=String.fromCharCode(i);}j=0;unclosedString:     for (;;) {while (j >= s.length) {j=0;var cl=line, cf=from;if (!nextLine()) {errorAt(\"Unclosed string.\", cl, cf);break unclosedString;}if (allowNewLine) {allowNewLine=false;} else {warningAt(\"Unclosed string.\", cl, cf);}}c=s.charAt(j);if (c === x) {character += 1;s=s.substr(j + 1);return it('(string)', r, x);}if (c < ' ') {if (c === '\\n' || c === '\\r') {break;}warningAt(\"Control character in string: {a}.\",\nline, character + j, s.slice(0, j));} else if (c === '\\\\') {j += 1;character += 1;c=s.charAt(j);n=s.charAt(j + 1);switch (c) {case '\\\\':\ncase '\"':\ncase '/':\nbreak;case '\\'':\nif (jsonmode) {warningAt(\"Avoid \\\\'.\", line, character);}break;case 'b':\nc='\\b';break;case 'f':\nc='\\f';break;case 'n':\nc='\\n';break;case 'r':\nc='\\r';break;case 't':\nc='\\t';break;case '0':\nc='\\0';if (n >= 0 && n <= 7 && directive[\"use strict\"]) {warningAt(\n\"Octal literals are not allowed in strict mode.\",\nline, character);}break;case 'u':\nesc(4);break;case 'v':\nif (jsonmode) {warningAt(\"Avoid \\\\v.\", line, character);}c='\\v';break;case 'x':\nif (jsonmode) {warningAt(\"Avoid \\\\x-.\", line, character);}esc(2);break;case '':\nallowNewLine=true;if (option.multistr) {if (jsonmode) {warningAt(\"Avoid EOL escapement.\", line, character);}c='';character -= 1;break;}warningAt(\"Bad escapement of EOL. Use option multistr if needed.\",\nline, character);break;default:\nwarningAt(\"Bad escapement.\", line, character);}}r += c;character += 1;j += 1;}}for (;;) {if (!s) {return it(nextLine() ? '(endline)':'(end)', '');}t=match(tx);if (!t) {t='';c='';while (s && s < '!') {s=s.substr(1);}if (s) {errorAt(\"Unexpected '{a}'.\", line, character, s.substr(0, 1));s='';}} else {if (c.isAlpha() || c === '_' || c === '$') {return it('(identifier)', t);}if (c.isDigit()) {if (!isFinite(Number(t))) {warningAt(\"Bad number '{a}'.\",\nline, character, t);}if (s.substr(0, 1).isAlpha()) {warningAt(\"Missing space after '{a}'.\",\nline, character, t);}if (c === '0') {d=t.substr(1, 1);if (d.isDigit()) {if (token.id !== '.') {warningAt(\"Don't use extra leading zeros '{a}'.\",\nline, character, t);}} else if (jsonmode && (d === 'x' || d === 'X')) {warningAt(\"Avoid 0x-. '{a}'.\",\nline, character, t);}}if (t.substr(t.length - 1) === '.') {warningAt(\n\"A trailing decimal point can be confused with a dot '{a}'.\", line, character, t);}return it('(number)', t);}switch (t) {case '\"':\ncase \"'\":\nreturn string(t);case '\ns='';token.comment=true;break;case '/*':\nfor (;;) {i=s.search(lx);if (i >= 0) {break;}if (!nextLine()) {errorAt(\"Unclosed comment.\", line, character);}}character += i + 2;if (s.substr(i, 1) === '/') {errorAt(\"Nested comment.\", line, character);}s=s.substr(i + 2);token.comment=true;break;case '/*members':\ncase '/*member':\ncase '/*jshint':\ncase '/*jslint':\ncase '/*global':\ncase '*/':\nreturn {value: t,\ntype: 'special',\nline: line,\ncharacter: character,\nfrom: from};case '':\nbreak;case '/':\nif (token.id === '/=') {errorAt(\"A regular expression literal can be confused with '/='.\",\nline, from);}if (prereg) {depth=0;captures=0;l=0;for (;;) {b=true;c=s.charAt(l);l += 1;switch (c) {case '':\nerrorAt(\"Unclosed regular expression.\", line, from);return quit('Stopping.', line, from);case '/':\nif (depth > 0) {warningAt(\"{a} unterminated regular expression \" +\n\"group(s).\", line, from + l, depth);}c=s.substr(0, l - 1);q={g: true,\ni: true,\nm: true};while (q[s.charAt(l)] === true) {q[s.charAt(l)]=false;l += 1;}character += l;s=s.substr(l);q=s.charAt(0);if (q === '/' || q === '*') {errorAt(\"Confusing regular expression.\",\nline, from);}return it('(regexp)', c);case '\\\\':\nc=s.charAt(l);if (c < ' ') {warningAt(\n\"Unexpected control character in regular expression.\", line, from + l);} else if (c === '<') {warningAt(\n\"Unexpected escaped character '{a}' in regular expression.\", line, from + l, c);}l += 1;break;case '(':\ndepth += 1;b=false;if (s.charAt(l) === '?') {l += 1;switch (s.charAt(l)) {case ':':\ncase '=':\ncase '!':\nl += 1;break;default:\nwarningAt(\n\"Expected '{a}' and instead saw '{b}'.\", line, from + l, ':', s.charAt(l));}} else {captures += 1;}break;case '|':\nb=false;break;case ')':\nif (depth === 0) {warningAt(\"Unescaped '{a}'.\",\nline, from + l, ')');} else {depth -= 1;}break;case ' ':\nq=1;while (s.charAt(l) === ' ') {l += 1;q += 1;}if (q > 1) {warningAt(\n\"Spaces are hard to count. Use {{a}}.\", line, from + l, q);}break;case '[':\nc=s.charAt(l);if (c === '^') {l += 1;if (option.regexp) {warningAt(\"Insecure '{a}'.\",\nline, from + l, c);} else if (s.charAt(l) === ']') {errorAt(\"Unescaped '{a}'.\",\nline, from + l, '^');}}if (c === ']') {warningAt(\"Empty class.\", line,\nfrom + l - 1);}isLiteral=false;isInRange=false;klass:                                  do {c=s.charAt(l);l += 1;switch (c) {case '[':\ncase '^':\nwarningAt(\"Unescaped '{a}'.\",\nline, from + l, c);if (isInRange) {isInRange=false;} else {isLiteral=true;}break;case '-':\nif (isLiteral && !isInRange) {isLiteral=false;isInRange=true;} else if (isInRange) {isInRange=false;} else if (s.charAt(l) === ']') {isInRange=true;} else {if (option.regexdash !== (l === 2 || (l === 3 &&\ns.charAt(1) === '^'))) {warningAt(\"Unescaped '{a}'.\",\nline, from + l - 1, '-');}isLiteral=true;}break;case ']':\nif (isInRange && !option.regexdash) {warningAt(\"Unescaped '{a}'.\",\nline, from + l - 1, '-');}break klass;case '\\\\':\nc=s.charAt(l);if (c < ' ') {warningAt(\n\"Unexpected control character in regular expression.\", line, from + l);} else if (c === '<') {warningAt(\n\"Unexpected escaped character '{a}' in regular expression.\", line, from + l, c);}l += 1;if (/[wsd]/i.test(c)) {if (isInRange) {warningAt(\"Unescaped '{a}'.\",\nline, from + l, '-');isInRange=false;}isLiteral=false;} else if (isInRange) {isInRange=false;} else {isLiteral=true;}break;case '/':\nwarningAt(\"Unescaped '{a}'.\",\nline, from + l - 1, '/');if (isInRange) {isInRange=false;} else {isLiteral=true;}break;case '<':\nif (isInRange) {isInRange=false;} else {isLiteral=true;}break;default:\nif (isInRange) {isInRange=false;} else {isLiteral=true;}}} while (c);break;case '.':\nif (option.regexp) {warningAt(\"Insecure '{a}'.\", line,\nfrom + l, c);}break;case ']':\ncase '?':\ncase '{':\ncase '}':\ncase '+':\ncase '*':\nwarningAt(\"Unescaped '{a}'.\", line,\nfrom + l, c);}if (b) {switch (s.charAt(l)) {case '?':\ncase '+':\ncase '*':\nl += 1;if (s.charAt(l) === '?') {l += 1;}break;case '{':\nl += 1;c=s.charAt(l);if (c < '0' || c > '9') {warningAt(\n\"Expected a number and instead saw '{a}'.\", line, from + l, c);}l += 1;low=+c;for (;;) {c=s.charAt(l);if (c < '0' || c > '9') {break;}l += 1;low=+c + (low * 10);}high=low;if (c === ',') {l += 1;high=Infinity;c=s.charAt(l);if (c >= '0' && c <= '9') {l += 1;high=+c;for (;;) {c=s.charAt(l);if (c < '0' || c > '9') {break;}l += 1;high=+c + (high * 10);}}}if (s.charAt(l) !== '}') {warningAt(\n\"Expected '{a}' and instead saw '{b}'.\", line, from + l, '}', c);} else {l += 1;}if (s.charAt(l) === '?') {l += 1;}if (low > high) {warningAt(\n\"'{a}' should not be greater than '{b}'.\", line, from + l, low, high);}}}}c=s.substr(0, l - 1);character += l;s=s.substr(l);return it('(regexp)', c);}return it('(punctuator)', t);case '#':\nreturn it('(punctuator)', t);default:\nreturn it('(punctuator)', t);}}}}};}());function addlabel(t, type) {if (t === 'hasOwnProperty') {warning(\"'hasOwnProperty' is a really bad name.\");}if (is_own(funct, t) && !funct['(global)']) {if (funct[t] === true) {if (option.latedef)\nwarning(\"'{a}' was used before it was defined.\", nexttoken, t);} else {if (!option.shadow && type !== \"exception\")\nwarning(\"'{a}' is already defined.\", nexttoken, t);}}funct[t]=type;if (funct['(global)']) {global[t]=funct;if (is_own(implied, t)) {if (option.latedef)\nwarning(\"'{a}' was used before it was defined.\", nexttoken, t);delete implied[t];}} else {scope[t]=funct;}}function doOption() {var b, obj, filter, o=nexttoken.value, t, v;switch (o) {case '*/':\nerror(\"Unbegun comment.\");break;case '/*members':\ncase '/*member':\no='/*members';if (!membersOnly) {membersOnly={};}obj=membersOnly;break;case '/*jshint':\ncase '/*jslint':\nobj=option;filter=boolOptions;break;case '/*global':\nobj=predefined;break;default:\nerror(\"What?\");}t=lex.token();loop:   for (;;) {for (;;) {if (t.type === 'special' && t.value === '*/') {break loop;}if (t.id !== '(endline)' && t.id !== ',') {break;}t=lex.token();}if (t.type !== '(string)' && t.type !== '(identifier)' &&\no !== '/*members') {error(\"Bad option.\", t);}v=lex.token();if (v.id === ':') {v=lex.token();if (obj === membersOnly) {error(\"Expected '{a}' and instead saw '{b}'.\",\nt, '*/', ':');}if (o === '/*jshint') {checkOption(t.value, t);}if (t.value === 'indent' && (o === '/*jshint' || o === '/*jslint')) {b=+v.value;if (typeof b !== 'number' || !isFinite(b) || b <= 0 ||\nMath.floor(b) !== b) {error(\"Expected a small integer and instead saw '{a}'.\",\nv, v.value);}obj.white=true;obj.indent=b;} else if (t.value === 'maxerr' && (o === '/*jshint' || o === '/*jslint')) {b=+v.value;if (typeof b !== 'number' || !isFinite(b) || b <= 0 ||\nMath.floor(b) !== b) {error(\"Expected a small integer and instead saw '{a}'.\",\nv, v.value);}obj.maxerr=b;} else if (t.value === 'maxlen' && (o === '/*jshint' || o === '/*jslint')) {b=+v.value;if (typeof b !== 'number' || !isFinite(b) || b <= 0 ||\nMath.floor(b) !== b) {error(\"Expected a small integer and instead saw '{a}'.\",\nv, v.value);}obj.maxlen=b;} else if (t.value === 'validthis') {if (funct['(global)']) {error(\"Option 'validthis' can't be used in a global scope.\");} else {if (v.value === 'true' || v.value === 'false')\nobj[t.value]=v.value === 'true';else\nerror(\"Bad option value.\", v);}} else if (v.value === 'true') {obj[t.value]=true;} else if (v.value === 'false') {obj[t.value]=false;} else {error(\"Bad option value.\", v);}t=lex.token();} else {if (o === '/*jshint' || o === '/*jslint') {error(\"Missing option value.\", t);}obj[t.value]=false;t=v;}}if (filter) {assume();}}function peek(p) {var i=p || 0, j=0, t;while (j <= i) {t=lookahead[j];if (!t) {t=lookahead[j]=lex.token();}j += 1;}return t;}function advance(id, t) {switch (token.id) {case '(number)':\nif (nexttoken.id === '.') {warning(\"A dot following a number can be confused with a decimal point.\", token);}break;case '-':\nif (nexttoken.id === '-' || nexttoken.id === '--') {warning(\"Confusing minusses.\");}break;case '+':\nif (nexttoken.id === '+' || nexttoken.id === '++') {warning(\"Confusing plusses.\");}break;}if (token.type === '(string)' || token.identifier) {anonname=token.value;}if (id && nexttoken.id !== id) {if (t) {if (nexttoken.id === '(end)') {warning(\"Unmatched '{a}'.\", t, t.id);} else {warning(\"Expected '{a}' to match '{b}' from line {c} and instead saw '{d}'.\",\nnexttoken, id, t.id, t.line, nexttoken.value);}} else if (nexttoken.type !== '(identifier)' ||\nnexttoken.value !== id) {warning(\"Expected '{a}' and instead saw '{b}'.\",\nnexttoken, id, nexttoken.value);}}prevtoken=token;token=nexttoken;for (;;) {nexttoken=lookahead.shift() || lex.token();if (nexttoken.id === '(end)' || nexttoken.id === '(error)') {return;}if (nexttoken.type === 'special') {doOption();} else {if (nexttoken.id !== '(endline)') {break;}}}}function expression(rbp, initial) {var left, isArray=false, isObject=false;if (nexttoken.id === '(end)')\nerror(\"Unexpected early end of program.\", token);advance();if (initial) {anonname='anonymous';funct['(verb)']=token.value;}if (initial === true && token.fud) {left=token.fud();} else {if (token.nud) {left=token.nud();} else {if (nexttoken.type === '(number)' && token.id === '.') {warning(\"A leading decimal point can be confused with a dot: '.{a}'.\",\ntoken, nexttoken.value);advance();return token;} else {error(\"Expected an identifier and instead saw '{a}'.\",\ntoken, token.id);}}while (rbp < nexttoken.lbp) {isArray=token.value === 'Array';isObject=token.value === 'Object';advance();if (isArray && token.id === '(' && nexttoken.id === ')')\nwarning(\"Use the array literal notation [].\", token);if (isObject && token.id === '(' && nexttoken.id === ')')\nwarning(\"Use the object literal notation {}.\", token);if (token.led) {left=token.led(left);} else {error(\"Expected an operator and instead saw '{a}'.\",\ntoken, token.id);}}}return left;}function adjacent(left, right) {left=left || token;right=right || nexttoken;if (option.white) {if (left.character !== right.from && left.line === right.line) {left.from += (left.character - left.from);warning(\"Unexpected space after '{a}'.\", left, left.value);}}}function nobreak(left, right) {left=left || token;right=right || nexttoken;if (option.white && (left.character !== right.from || left.line !== right.line)) {warning(\"Unexpected space before '{a}'.\", right, right.value);}}function nospace(left, right) {left=left || token;right=right || nexttoken;if (option.white && !left.comment) {if (left.line === right.line) {adjacent(left, right);}}}function nonadjacent(left, right) {if (option.white) {left=left || token;right=right || nexttoken;if (left.line === right.line && left.character === right.from) {left.from += (left.character - left.from);warning(\"Missing space after '{a}'.\",\nleft, left.value);}}}function nobreaknonadjacent(left, right) {left=left || token;right=right || nexttoken;if (!option.laxbreak && left.line !== right.line) {warning(\"Bad line breaking before '{a}'.\", right, right.id);} else if (option.white) {left=left || token;right=right || nexttoken;if (left.character === right.from) {left.from += (left.character - left.from);warning(\"Missing space after '{a}'.\",\nleft, left.value);}}}function indentation(bias) {var i;if (option.white && nexttoken.id !== '(end)') {i=indent + (bias || 0);if (nexttoken.from !== i) {warning(\n\"Expected '{a}' to have an indentation at {b} instead at {c}.\",\nnexttoken, nexttoken.value, i, nexttoken.from);}}}function nolinebreak(t) {t=t || token;if (t.line !== nexttoken.line) {warning(\"Line breaking error '{a}'.\", t, t.value);}}function comma() {if (token.line !== nexttoken.line) {if (!option.laxcomma) {if (comma.first) {warning(\"Comma warnings can be turned off with 'laxcomma'\");comma.first=false;}warning(\"Bad line breaking before '{a}'.\", token, nexttoken.id);}} else if (!token.comment && token.character !== nexttoken.from && option.white) {token.from += (token.character - token.from);warning(\"Unexpected space after '{a}'.\", token, token.value);}advance(',');nonadjacent(token, nexttoken);}function symbol(s, p) {var x=syntax[s];if (!x || typeof x !== 'object') {syntax[s]=x={id: s,\nlbp: p,\nvalue: s};}return x;}function delim(s) {return symbol(s, 0);}function stmt(s, f) {var x=delim(s);x.identifier=x.reserved=true;x.fud=f;return x;}function blockstmt(s, f) {var x=stmt(s, f);x.block=true;return x;}function reserveName(x) {var c=x.id.charAt(0);if ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')) {x.identifier=x.reserved=true;}return x;}function prefix(s, f) {var x=symbol(s, 150);reserveName(x);x.nud=(typeof f === 'function') ? f:function () {this.right=expression(150);this.arity='unary';if (this.id === '++' || this.id === '--') {if (option.plusplus) {warning(\"Unexpected use of '{a}'.\", this, this.id);} else if ((!this.right.identifier || this.right.reserved) &&\nthis.right.id !== '.' && this.right.id !== '[') {warning(\"Bad operand.\", this);}}return this;};return x;}function type(s, f) {var x=delim(s);x.type=s;x.nud=f;return x;}function reserve(s, f) {var x=type(s, f);x.identifier=x.reserved=true;return x;}function reservevar(s, v) {return reserve(s, function () {if (typeof v === 'function') {v(this);}return this;});}function infix(s, f, p, w) {var x=symbol(s, p);reserveName(x);x.led=function (left) {if (!w) {nobreaknonadjacent(prevtoken, token);nonadjacent(token, nexttoken);}if (s === \"in\" && left.id === \"!\") {warning(\"Confusing use of '{a}'.\", left, '!');}if (typeof f === 'function') {return f(left, this);} else {this.left=left;this.right=expression(p);return this;}};return x;}function relation(s, f) {var x=symbol(s, 100);x.led=function (left) {nobreaknonadjacent(prevtoken, token);nonadjacent(token, nexttoken);var right=expression(100);if ((left && left.id === 'NaN') || (right && right.id === 'NaN')) {warning(\"Use the isNaN function to compare with NaN.\", this);} else if (f) {f.apply(this, [left, right]);}if (left.id === '!') {warning(\"Confusing use of '{a}'.\", left, '!');}if (right.id === '!') {warning(\"Confusing use of '{a}'.\", right, '!');}this.left=left;this.right=right;return this;};return x;}function isPoorRelation(node) {return node &&\n((node.type === '(number)' && +node.value === 0) ||\n(node.type === '(string)' && node.value === '') ||\n(node.type === 'null' && !option.eqnull) ||\nnode.type === 'true' ||\nnode.type === 'false' ||\nnode.type === 'undefined');}function assignop(s, f) {symbol(s, 20).exps=true;return infix(s, function (left, that) {var l;that.left=left;if (predefined[left.value] === false &&\nscope[left.value]['(global)'] === true) {warning(\"Read only.\", left);} else if (left['function']) {warning(\"'{a}' is a function.\", left, left.value);}if (left) {if (option.esnext && funct[left.value] === 'const') {warning(\"Attempting to override '{a}' which is a constant\", left, left.value);}if (left.id === '.' || left.id === '[') {if (!left.left || left.left.value === 'arguments') {warning('Bad assignment.', that);}that.right=expression(19);return that;} else if (left.identifier && !left.reserved) {if (funct[left.value] === 'exception') {warning(\"Do not assign to the exception parameter.\", left);}that.right=expression(19);return that;}if (left === syntax['function']) {warning(\n\"Expected an identifier in an assignment and instead saw a function invocation.\",\ntoken);}}error(\"Bad assignment.\", that);}, 20);}function bitwise(s, f, p) {var x=symbol(s, p);reserveName(x);x.led=(typeof f === 'function') ? f:function (left) {if (option.bitwise) {warning(\"Unexpected use of '{a}'.\", this, this.id);}this.left=left;this.right=expression(p);return this;};return x;}function bitwiseassignop(s) {symbol(s, 20).exps=true;return infix(s, function (left, that) {if (option.bitwise) {warning(\"Unexpected use of '{a}'.\", that, that.id);}nonadjacent(prevtoken, token);nonadjacent(token, nexttoken);if (left) {if (left.id === '.' || left.id === '[' ||\n(left.identifier && !left.reserved)) {expression(19);return that;}if (left === syntax['function']) {warning(\n\"Expected an identifier in an assignment, and instead saw a function invocation.\",\ntoken);}return that;}error(\"Bad assignment.\", that);}, 20);}function suffix(s, f) {var x=symbol(s, 150);x.led=function (left) {if (option.plusplus) {warning(\"Unexpected use of '{a}'.\", this, this.id);} else if ((!left.identifier || left.reserved) &&\nleft.id !== '.' && left.id !== '[') {warning(\"Bad operand.\", this);}this.left=left;return this;};return x;}function optionalidentifier(fnparam) {if (nexttoken.identifier) {advance();if (token.reserved && !option.es5) {if (!fnparam || token.value !== 'undefined') {warning(\"Expected an identifier and instead saw '{a}' (a reserved word).\",\ntoken, token.id);}}return token.value;}}function identifier(fnparam) {var i=optionalidentifier(fnparam);if (i) {return i;}if (token.id === 'function' && nexttoken.id === '(') {warning(\"Missing name in function declaration.\");} else {error(\"Expected an identifier and instead saw '{a}'.\",\nnexttoken, nexttoken.value);}}function reachable(s) {var i=0, t;if (nexttoken.id !== ';' || noreach) {return;}for (;;) {t=peek(i);if (t.reach) {return;}if (t.id !== '(endline)') {if (t.id === 'function') {if (!option.latedef) {break;}warning(\n\"Inner functions should be listed at the top of the outer function.\", t);break;}warning(\"Unreachable '{a}' after '{b}'.\", t, t.value, s);break;}i += 1;}}function statement(noindent) {var i=indent, r, s=scope, t=nexttoken;if (t.id === \";\") {advance(\";\");return;}if (t.identifier && !t.reserved && peek().id === ':') {advance();advance(':');scope=Object.create(s);addlabel(t.value, 'label');if (!nexttoken.labelled) {warning(\"Label '{a}' on {b} statement.\",\nnexttoken, t.value, nexttoken.value);}if (jx.test(t.value + ':')) {warning(\"Label '{a}' looks like a javascript url.\",\nt, t.value);}nexttoken.label=t.value;t=nexttoken;}if (!noindent) {indentation();}r=expression(0, true);if (!t.block) {if (!option.expr && (!r || !r.exps)) {warning(\"Expected an assignment or function call and instead saw an expression.\",\ntoken);} else if (option.nonew && r.id === '(' && r.left.id === 'new') {warning(\"Do not use 'new' for side effects.\");}if (nexttoken.id === ',') {return comma();}if (nexttoken.id !== ';') {if (!option.asi) {if (!option.lastsemic || nexttoken.id !== '}' ||\nnexttoken.line !== token.line) {warningAt(\"Missing semicolon.\", token.line, token.character);}}} else {adjacent(token, nexttoken);advance(';');nonadjacent(token, nexttoken);}}indent=i;scope=s;return r;}function statements(startLine) {var a=[], f, p;while (!nexttoken.reach && nexttoken.id !== '(end)') {if (nexttoken.id === ';') {p=peek();if (!p || p.id !== \"(\") {warning(\"Unnecessary semicolon.\");}advance(';');} else {a.push(statement(startLine === nexttoken.line));}}return a;}/*\n* read all directives\n* recognizes a simple form of asi, but always\n* warns, if it is used\n*/\nfunction directives() {var i, p, pn;for (;;) {if (nexttoken.id === \"(string)\") {p=peek(0);if (p.id === \"(endline)\") {i=1;do {pn=peek(i);i=i + 1;} while (pn.id === \"(endline)\");if (pn.id !== \";\") {if (pn.id !== \"(string)\" && pn.id !== \"(number)\" &&\npn.id !== \"(regexp)\" && pn.identifier !== true &&\npn.id !== \"}\") {break;}warning(\"Missing semicolon.\", nexttoken);} else {p=pn;}} else if (p.id === \"}\") {warning(\"Missing semicolon.\", p);} else if (p.id !== \";\") {break;}indentation();advance();if (directive[token.value]) {warning(\"Unnecessary directive \\\"{a}\\\".\", token, token.value);}if (token.value === \"use strict\") {option.newcap=true;option.undef=true;}directive[token.value]=true;if (p.id === \";\") {advance(\";\");}continue;}break;}}/*\n* Parses a single block. A block is a sequence of statements wrapped in\n* braces.\n*\n* ordinary - true for everything but function bodies and try blocks.\n* stmt     - true if block can be a single statement (e.g. in if/for/while).\n* isfunc   - true if block is a function body\n*/\nfunction block(ordinary, stmt, isfunc) {var a,\nb=inblock,\nold_indent=indent,\nm,\ns=scope,\nt,\nline,\nd;inblock=ordinary;if (!ordinary || !option.funcscope) scope=Object.create(scope);nonadjacent(token, nexttoken);t=nexttoken;if (nexttoken.id === '{') {advance('{');line=token.line;if (nexttoken.id !== '}') {indent += option.indent;while (!ordinary && nexttoken.from > indent) {indent += option.indent;}if (isfunc) {m={};for (d in directive) {if (is_own(directive, d)) {m[d]=directive[d];}}directives();if (option.strict && funct['(context)']['(global)']) {if (!m[\"use strict\"] && !directive[\"use strict\"]) {warning(\"Missing \\\"use strict\\\" statement.\");}}}a=statements(line);if (isfunc) {directive=m;}indent -= option.indent;if (line !== nexttoken.line) {indentation();}} else if (line !== nexttoken.line) {indentation();}advance('}', t);indent=old_indent;} else if (!ordinary) {error(\"Expected '{a}' and instead saw '{b}'.\",\nnexttoken, '{', nexttoken.value);} else {if (!stmt || option.curly)\nwarning(\"Expected '{a}' and instead saw '{b}'.\",\nnexttoken, '{', nexttoken.value);noreach=true;indent += option.indent;a=[statement(nexttoken.line === token.line)];indent -= option.indent;noreach=false;}funct['(verb)']=null;if (!ordinary || !option.funcscope) scope=s;inblock=b;if (ordinary && option.noempty && (!a || a.length === 0)) {warning(\"Empty block.\");}return a;}function countMember(m) {if (membersOnly && typeof membersOnly[m] !== 'boolean') {warning(\"Unexpected /*member '{a}'.\", token, m);}if (typeof member[m] === 'number') {member[m] += 1;} else {member[m]=1;}}function note_implied(token) {var name=token.value, line=token.line, a=implied[name];if (typeof a === 'function') {a=false;}if (!a) {a=[line];implied[name]=a;} else if (a[a.length - 1] !== line) {a.push(line);}}type('(number)', function () {return this;});type('(string)', function () {return this;});syntax['(identifier)']={type: '(identifier)',\nlbp: 0,\nidentifier: true,\nnud: function () {var v=this.value,\ns=scope[v],\nf;if (typeof s === 'function') {s=undefined;} else if (typeof s === 'boolean') {f=funct;funct=functions[0];addlabel(v, 'var');s=funct;funct=f;}if (funct === s) {switch (funct[v]) {case 'unused':\nfunct[v]='var';break;case 'unction':\nfunct[v]='function';this['function']=true;break;case 'function':\nthis['function']=true;break;case 'label':\nwarning(\"'{a}' is a statement label.\", token, v);break;}} else if (funct['(global)']) {if (option.undef && typeof predefined[v] !== 'boolean') {if (!(anonname === 'typeof' || anonname === 'delete') ||\n(nexttoken && (nexttoken.value === '.' || nexttoken.value === '['))) {isundef(funct, \"'{a}' is not defined.\", token, v);}}note_implied(token);} else {switch (funct[v]) {case 'closure':\ncase 'function':\ncase 'var':\ncase 'unused':\nwarning(\"'{a}' used out of scope.\", token, v);break;case 'label':\nwarning(\"'{a}' is a statement label.\", token, v);break;case 'outer':\ncase 'global':\nbreak;default:\nif (s === true) {funct[v]=true;} else if (s === null) {warning(\"'{a}' is not allowed.\", token, v);note_implied(token);} else if (typeof s !== 'object') {if (option.undef) {if (!(anonname === 'typeof' || anonname === 'delete') ||\n(nexttoken &&\n(nexttoken.value === '.' || nexttoken.value === '['))) {isundef(funct, \"'{a}' is not defined.\", token, v);}}funct[v]=true;note_implied(token);} else {switch (s[v]) {case 'function':\ncase 'unction':\nthis['function']=true;s[v]='closure';funct[v]=s['(global)'] ? 'global':'outer';break;case 'var':\ncase 'unused':\ns[v]='closure';funct[v]=s['(global)'] ? 'global':'outer';break;case 'closure':\ncase 'parameter':\nfunct[v]=s['(global)'] ? 'global':'outer';break;case 'label':\nwarning(\"'{a}' is a statement label.\", token, v);}}}}return this;},\nled: function () {error(\"Expected an operator and instead saw '{a}'.\",\nnexttoken, nexttoken.value);}};type('(regexp)', function () {return this;});delim('(endline)');delim('(begin)');delim('(end)').reach=true;delim('</').reach=true;delim('<!');delim('<!--');delim('-->');delim('(error)').reach=true;delim('}').reach=true;delim(')');delim(']');delim('\"').reach=true;delim(\"'\").reach=true;delim(';');delim(':').reach=true;delim(',');delim('#');delim('@');reserve('else');reserve('case').reach=true;reserve('catch');reserve('default').reach=true;reserve('finally');reservevar('arguments', function (x) {if (directive['use strict'] && funct['(global)']) {warning(\"Strict violation.\", x);}});reservevar('eval');reservevar('false');reservevar('Infinity');reservevar('NaN');reservevar('null');reservevar('this', function (x) {if (directive['use strict'] && !option.validthis && ((funct['(statement)'] &&\nfunct['(name)'].charAt(0) > 'Z') || funct['(global)'])) {warning(\"Possible strict violation.\", x);}});reservevar('true');reservevar('undefined');assignop('=', 'assign', 20);assignop('+=', 'assignadd', 20);assignop('-=', 'assignsub', 20);assignop('*=', 'assignmult', 20);assignop('/=', 'assigndiv', 20).nud=function () {error(\"A regular expression literal can be confused with '/='.\");};assignop('%=', 'assignmod', 20);bitwiseassignop('&=', 'assignbitand', 20);bitwiseassignop('|=', 'assignbitor', 20);bitwiseassignop('^=', 'assignbitxor', 20);bitwiseassignop('<<=', 'assignshiftleft', 20);bitwiseassignop('>>=', 'assignshiftright', 20);bitwiseassignop('>>>=', 'assignshiftrightunsigned', 20);infix('?', function (left, that) {that.left=left;that.right=expression(10);advance(':');that['else']=expression(10);return that;}, 30);infix('||', 'or', 40);infix('&&', 'and', 50);bitwise('|', 'bitor', 70);bitwise('^', 'bitxor', 80);bitwise('&', 'bitand', 90);relation('==', function (left, right) {var eqnull=option.eqnull && (left.value === 'null' || right.value === 'null');if (!eqnull && option.eqeqeq)\nwarning(\"Expected '{a}' and instead saw '{b}'.\", this, '===', '==');else if (isPoorRelation(left))\nwarning(\"Use '{a}' to compare with '{b}'.\", this, '===', left.value);else if (isPoorRelation(right))\nwarning(\"Use '{a}' to compare with '{b}'.\", this, '===', right.value);return this;});relation('===');relation('!=', function (left, right) {var eqnull=option.eqnull &&\n(left.value === 'null' || right.value === 'null');if (!eqnull && option.eqeqeq) {warning(\"Expected '{a}' and instead saw '{b}'.\",\nthis, '!==', '!=');} else if (isPoorRelation(left)) {warning(\"Use '{a}' to compare with '{b}'.\",\nthis, '!==', left.value);} else if (isPoorRelation(right)) {warning(\"Use '{a}' to compare with '{b}'.\",\nthis, '!==', right.value);}return this;});relation('!==');relation('<');relation('>');relation('<=');relation('>=');bitwise('<<', 'shiftleft', 120);bitwise('>>', 'shiftright', 120);bitwise('>>>', 'shiftrightunsigned', 120);infix('in', 'in', 120);infix('instanceof', 'instanceof', 120);infix('+', function (left, that) {var right=expression(130);if (left && right && left.id === '(string)' && right.id === '(string)') {left.value += right.value;left.character=right.character;if (!option.scripturl && jx.test(left.value)) {warning(\"JavaScript URL.\", left);}return left;}that.left=left;that.right=right;return that;}, 130);prefix('+', 'num');prefix('+++', function () {warning(\"Confusing pluses.\");this.right=expression(150);this.arity='unary';return this;});infix('+++', function (left) {warning(\"Confusing pluses.\");this.left=left;this.right=expression(130);return this;}, 130);infix('-', 'sub', 130);prefix('-', 'neg');prefix('---', function () {warning(\"Confusing minuses.\");this.right=expression(150);this.arity='unary';return this;});infix('---', function (left) {warning(\"Confusing minuses.\");this.left=left;this.right=expression(130);return this;}, 130);infix('*', 'mult', 140);infix('/', 'div', 140);infix('%', 'mod', 140);suffix('++', 'postinc');prefix('++', 'preinc');syntax['++'].exps=true;suffix('--', 'postdec');prefix('--', 'predec');syntax['--'].exps=true;prefix('delete', function () {var p=expression(0);if (!p || (p.id !== '.' && p.id !== '[')) {warning(\"Variables should not be deleted.\");}this.first=p;return this;}).exps=true;prefix('~', function () {if (option.bitwise) {warning(\"Unexpected '{a}'.\", this, '~');}expression(150);return this;});prefix('!', function () {this.right=expression(150);this.arity='unary';if (bang[this.right.id] === true) {warning(\"Confusing use of '{a}'.\", this, '!');}return this;});prefix('typeof', 'typeof');prefix('new', function () {var c=expression(155), i;if (c && c.id !== 'function') {if (c.identifier) {c['new']=true;switch (c.value) {case 'Number':\ncase 'String':\ncase 'Boolean':\ncase 'Math':\ncase 'JSON':\nwarning(\"Do not use {a} as a constructor.\", token, c.value);break;case 'Function':\nif (!option.evil) {warning(\"The Function constructor is eval.\");}break;case 'Date':\ncase 'RegExp':\nbreak;default:\nif (c.id !== 'function') {i=c.value.substr(0, 1);if (option.newcap && (i < 'A' || i > 'Z')) {warning(\"A constructor name should start with an uppercase letter.\",\ntoken);}}}} else {if (c.id !== '.' && c.id !== '[' && c.id !== '(') {warning(\"Bad constructor.\", token);}}} else {if (!option.supernew)\nwarning(\"Weird construction. Delete 'new'.\", this);}adjacent(token, nexttoken);if (nexttoken.id !== '(' && !option.supernew) {warning(\"Missing '()' invoking a constructor.\");}this.first=c;return this;});syntax['new'].exps=true;prefix('void').exps=true;infix('.', function (left, that) {adjacent(prevtoken, token);nobreak();var m=identifier();if (typeof m === 'string') {countMember(m);}that.left=left;that.right=m;if (left && left.value === 'arguments' && (m === 'callee' || m === 'caller')) {if (option.noarg)\nwarning(\"Avoid arguments.{a}.\", left, m);else if (directive['use strict'])\nerror('Strict violation.');} else if (!option.evil && left && left.value === 'document' &&\n(m === 'write' || m === 'writeln')) {warning(\"document.write can be a form of eval.\", left);}if (!option.evil && (m === 'eval' || m === 'execScript')) {warning('eval is evil.');}return that;}, 160, true);infix('(', function (left, that) {if (prevtoken.id !== '}' && prevtoken.id !== ')') {nobreak(prevtoken, token);}nospace();if (option.immed && !left.immed && left.id === 'function') {warning(\"Wrap an immediate function invocation in parentheses \" +\n\"to assist the reader in understanding that the expression \" +\n\"is the result of a function, and not the function itself.\");}var n=0,\np=[];if (left) {if (left.type === '(identifier)') {if (left.value.match(/^[A-Z]([A-Z0-9_$]*[a-z][A-Za-z0-9_$]*)?$/)) {if (left.value !== 'Number' && left.value !== 'String' &&\nleft.value !== 'Boolean' &&\nleft.value !== 'Date') {if (left.value === 'Math') {warning(\"Math is not a function.\", left);} else if (option.newcap) {warning(\n\"Missing 'new' prefix when invoking a constructor.\", left);}}}}}if (nexttoken.id !== ')') {for (;;) {p[p.length]=expression(10);n += 1;if (nexttoken.id !== ',') {break;}comma();}}advance(')');nospace(prevtoken, token);if (typeof left === 'object') {if (left.value === 'parseInt' && n === 1) {warning(\"Missing radix parameter.\", left);}if (!option.evil) {if (left.value === 'eval' || left.value === 'Function' ||\nleft.value === 'execScript') {warning(\"eval is evil.\", left);} else if (p[0] && p[0].id === '(string)' &&\n(left.value === 'setTimeout' ||\nleft.value === 'setInterval')) {warning(\n\"Implied eval is evil. Pass a function instead of a string.\", left);}}if (!left.identifier && left.id !== '.' && left.id !== '[' &&\nleft.id !== '(' && left.id !== '&&' && left.id !== '||' &&\nleft.id !== '?') {warning(\"Bad invocation.\", left);}}that.left=left;return that;}, 155, true).exps=true;prefix('(', function () {nospace();if (nexttoken.id === 'function') {nexttoken.immed=true;}var v=expression(0);advance(')', this);nospace(prevtoken, token);if (option.immed && v.id === 'function') {if (nexttoken.id === '(' ||\n(nexttoken.id === '.' && (peek().value === 'call' || peek().value === 'apply'))) {warning(\n\"Move the invocation into the parens that contain the function.\", nexttoken);} else {warning(\n\"Do not wrap function literals in parens unless they are to be immediately invoked.\",\nthis);}}return v;});infix('[', function (left, that) {nobreak(prevtoken, token);nospace();var e=expression(0), s;if (e && e.type === '(string)') {if (!option.evil && (e.value === 'eval' || e.value === 'execScript')) {warning(\"eval is evil.\", that);}countMember(e.value);if (!option.sub && ix.test(e.value)) {s=syntax[e.value];if (!s || !s.reserved) {warning(\"['{a}'] is better written in dot notation.\",\ne, e.value);}}}advance(']', that);nospace(prevtoken, token);that.left=left;that.right=e;return that;}, 160, true);prefix('[', function () {var b=token.line !== nexttoken.line;this.first=[];if (b) {indent += option.indent;if (nexttoken.from === indent + option.indent) {indent += option.indent;}}while (nexttoken.id !== '(end)') {while (nexttoken.id === ',') {warning(\"Extra comma.\");advance(',');}if (nexttoken.id === ']') {break;}if (b && token.line !== nexttoken.line) {indentation();}this.first.push(expression(10));if (nexttoken.id === ',') {comma();if (nexttoken.id === ']' && !option.es5) {warning(\"Extra comma.\", token);break;}} else {break;}}if (b) {indent -= option.indent;indentation();}advance(']', this);return this;}, 160);function property_name() {var id=optionalidentifier(true);if (!id) {if (nexttoken.id === '(string)') {id=nexttoken.value;advance();} else if (nexttoken.id === '(number)') {id=nexttoken.value.toString();advance();}}return id;}function functionparams() {var i, t=nexttoken, p=[];advance('(');nospace();if (nexttoken.id === ')') {advance(')');return;}for (;;) {i=identifier(true);p.push(i);addlabel(i, 'parameter');if (nexttoken.id === ',') {comma();} else {advance(')', t);nospace(prevtoken, token);return p;}}}function doFunction(i, statement) {var f,\noldOption=option,\noldScope =scope;option=Object.create(option);scope=Object.create(scope);funct={'(name)':i || '\"' + anonname + '\"',\n'(line)':nexttoken.line,\n'(context)':funct,\n'(breakage)':0,\n'(loopage)':0,\n'(scope)':scope,\n'(statement)': statement};f=funct;token.funct=funct;functions.push(funct);if (i) {addlabel(i, 'function');}funct['(params)']=functionparams();block(false, false, true);scope=oldScope;option=oldOption;funct['(last)']=token.line;funct=funct['(context)'];return f;}(function (x) {x.nud=function () {var b, f, i, j, p, t;var props={};function saveProperty(name, token) {if (props[name] && is_own(props, name))\nwarning(\"Duplicate member '{a}'.\", nexttoken, i);else\nprops[name]={};props[name].basic=true;props[name].basicToken=token;}function saveSetter(name, token) {if (props[name] && is_own(props, name)) {if (props[name].basic || props[name].setter)\nwarning(\"Duplicate member '{a}'.\", nexttoken, i);} else {props[name]={};}props[name].setter=true;props[name].setterToken=token;}function saveGetter(name) {if (props[name] && is_own(props, name)) {if (props[name].basic || props[name].getter)\nwarning(\"Duplicate member '{a}'.\", nexttoken, i);} else {props[name]={};}props[name].getter=true;props[name].getterToken=token;}b=token.line !== nexttoken.line;if (b) {indent += option.indent;if (nexttoken.from === indent + option.indent) {indent += option.indent;}}for (;;) {if (nexttoken.id === '}') {break;}if (b) {indentation();}if (nexttoken.value === 'get' && peek().id !== ':') {advance('get');if (!option.es5) {error(\"get/set are ES5 features.\");}i=property_name();if (!i) {error(\"Missing property name.\");}saveGetter(i);t=nexttoken;adjacent(token, nexttoken);f=doFunction();p=f['(params)'];if (p) {warning(\"Unexpected parameter '{a}' in get {b} function.\", t, p[0], i);}adjacent(token, nexttoken);} else if (nexttoken.value === 'set' && peek().id !== ':') {advance('set');if (!option.es5) {error(\"get/set are ES5 features.\");}i=property_name();if (!i) {error(\"Missing property name.\");}saveSetter(i, nexttoken);t=nexttoken;adjacent(token, nexttoken);f=doFunction();p=f['(params)'];if (!p || p.length !== 1) {warning(\"Expected a single parameter in set {a} function.\", t, i);}} else {i=property_name();saveProperty(i, nexttoken);if (typeof i !== 'string') {break;}advance(':');nonadjacent(token, nexttoken);expression(10);}countMember(i);if (nexttoken.id === ',') {comma();if (nexttoken.id === ',') {warning(\"Extra comma.\", token);} else if (nexttoken.id === '}' && !option.es5) {warning(\"Extra comma.\", token);}} else {break;}}if (b) {indent -= option.indent;indentation();}advance('}', this);if (option.es5) {for (var name in props) {if (is_own(props, name) && props[name].setter && !props[name].getter) {warning(\"Setter is defined without getter.\", props[name].setterToken);}}}return this;};x.fud=function () {error(\"Expected to see a statement and instead saw a block.\", token);};}(delim('{')));useESNextSyntax=function () {var conststatement=stmt('const', function (prefix) {var id, name, value;this.first=[];for (;;) {nonadjacent(token, nexttoken);id=identifier();if (funct[id] === \"const\") {warning(\"const '\" + id + \"' has already been declared\");}if (funct['(global)'] && predefined[id] === false) {warning(\"Redefinition of '{a}'.\", token, id);}addlabel(id, 'const');if (prefix) {break;}name=token;this.first.push(token);if (nexttoken.id !== \"=\") {warning(\"const \" +\n\"'{a}' is initialized to 'undefined'.\", token, id);}if (nexttoken.id === '=') {nonadjacent(token, nexttoken);advance('=');nonadjacent(token, nexttoken);if (nexttoken.id === 'undefined') {warning(\"It is not necessary to initialize \" +\n\"'{a}' to 'undefined'.\", token, id);}if (peek(0).id === '=' && nexttoken.identifier) {error(\"Constant {a} was not declared correctly.\",\nnexttoken, nexttoken.value);}value=expression(0);name.first=value;}if (nexttoken.id !== ',') {break;}comma();}return this;});conststatement.exps=true;};var varstatement=stmt('var', function (prefix) {var id, name, value;if (funct['(onevar)'] && option.onevar) {warning(\"Too many var statements.\");} else if (!funct['(global)']) {funct['(onevar)']=true;}this.first=[];for (;;) {nonadjacent(token, nexttoken);id=identifier();if (option.esnext && funct[id] === \"const\") {warning(\"const '\" + id + \"' has already been declared\");}if (funct['(global)'] && predefined[id] === false) {warning(\"Redefinition of '{a}'.\", token, id);}addlabel(id, 'unused');if (prefix) {break;}name=token;this.first.push(token);if (nexttoken.id === '=') {nonadjacent(token, nexttoken);advance('=');nonadjacent(token, nexttoken);if (nexttoken.id === 'undefined') {warning(\"It is not necessary to initialize '{a}' to 'undefined'.\", token, id);}if (peek(0).id === '=' && nexttoken.identifier) {error(\"Variable {a} was not declared correctly.\",\nnexttoken, nexttoken.value);}value=expression(0);name.first=value;}if (nexttoken.id !== ',') {break;}comma();}return this;});varstatement.exps=true;blockstmt('function', function () {if (inblock) {warning(\"Function declarations should not be placed in blocks. \" +\n\"Use a function expression or move the statement to the top of \" +\n\"the outer function.\", token);}var i=identifier();if (option.esnext && funct[i] === \"const\") {warning(\"const '\" + i + \"' has already been declared\");}adjacent(token, nexttoken);addlabel(i, 'unction');doFunction(i, true);if (nexttoken.id === '(' && nexttoken.line === token.line) {error(\n\"Function declarations are not invocable. Wrap the whole function invocation in parens.\");}return this;});prefix('function', function () {var i=optionalidentifier();if (i) {adjacent(token, nexttoken);} else {nonadjacent(token, nexttoken);}doFunction(i);if (!option.loopfunc && funct['(loopage)']) {warning(\"Don't make functions within a loop.\");}return this;});blockstmt('if', function () {var t=nexttoken;advance('(');nonadjacent(this, t);nospace();expression(20);if (nexttoken.id === '=') {if (!option.boss)\nwarning(\"Expected a conditional expression and instead saw an assignment.\");advance('=');expression(20);}advance(')', t);nospace(prevtoken, token);block(true, true);if (nexttoken.id === 'else') {nonadjacent(token, nexttoken);advance('else');if (nexttoken.id === 'if' || nexttoken.id === 'switch') {statement(true);} else {block(true, true);}}return this;});blockstmt('try', function () {var b, e, s;block(false);if (nexttoken.id === 'catch') {advance('catch');nonadjacent(token, nexttoken);advance('(');s=scope;scope=Object.create(s);e=nexttoken.value;if (nexttoken.type !== '(identifier)') {warning(\"Expected an identifier and instead saw '{a}'.\",\nnexttoken, e);} else {addlabel(e, 'exception');}advance();advance(')');block(false);b=true;scope=s;}if (nexttoken.id === 'finally') {advance('finally');block(false);return;} else if (!b) {error(\"Expected '{a}' and instead saw '{b}'.\",\nnexttoken, 'catch', nexttoken.value);}return this;});blockstmt('while', function () {var t=nexttoken;funct['(breakage)'] += 1;funct['(loopage)'] += 1;advance('(');nonadjacent(this, t);nospace();expression(20);if (nexttoken.id === '=') {if (!option.boss)\nwarning(\"Expected a conditional expression and instead saw an assignment.\");advance('=');expression(20);}advance(')', t);nospace(prevtoken, token);block(true, true);funct['(breakage)'] -= 1;funct['(loopage)'] -= 1;return this;}).labelled=true;blockstmt('with', function () {var t=nexttoken;if (directive['use strict']) {error(\"'with' is not allowed in strict mode.\", token);} else if (!option.withstmt) {warning(\"Don't use 'with'.\", token);}advance('(');nonadjacent(this, t);nospace();expression(0);advance(')', t);nospace(prevtoken, token);block(true, true);return this;});blockstmt('switch', function () {var t=nexttoken,\ng=false;funct['(breakage)'] += 1;advance('(');nonadjacent(this, t);nospace();this.condition=expression(20);advance(')', t);nospace(prevtoken, token);nonadjacent(token, nexttoken);t=nexttoken;advance('{');nonadjacent(token, nexttoken);indent += option.indent;this.cases=[];for (;;) {switch (nexttoken.id) {case 'case':\nswitch (funct['(verb)']) {case 'break':\ncase 'case':\ncase 'continue':\ncase 'return':\ncase 'switch':\ncase 'throw':\nbreak;default:\nif (!ft.test(lines[nexttoken.line - 2])) {warning(\n\"Expected a 'break' statement before 'case'.\",\ntoken);}}indentation(-option.indent);advance('case');this.cases.push(expression(20));g=true;advance(':');funct['(verb)']='case';break;case 'default':\nswitch (funct['(verb)']) {case 'break':\ncase 'continue':\ncase 'return':\ncase 'throw':\nbreak;default:\nif (!ft.test(lines[nexttoken.line - 2])) {warning(\n\"Expected a 'break' statement before 'default'.\",\ntoken);}}indentation(-option.indent);advance('default');g=true;advance(':');break;case '}':\nindent -= option.indent;indentation();advance('}', t);if (this.cases.length === 1 || this.condition.id === 'true' ||\nthis.condition.id === 'false') {if (!option.onecase)\nwarning(\"This 'switch' should be an 'if'.\", this);}funct['(breakage)'] -= 1;funct['(verb)']=undefined;return;case '(end)':\nerror(\"Missing '{a}'.\", nexttoken, '}');return;default:\nif (g) {switch (token.id) {case ',':\nerror(\"Each value should have its own case label.\");return;case ':':\ng=false;statements();break;default:\nerror(\"Missing ':' on a case clause.\", token);return;}} else {if (token.id === ':') {advance(':');error(\"Unexpected '{a}'.\", token, ':');statements();} else {error(\"Expected '{a}' and instead saw '{b}'.\",\nnexttoken, 'case', nexttoken.value);return;}}}}}).labelled=true;stmt('debugger', function () {if (!option.debug) {warning(\"All 'debugger' statements should be removed.\");}return this;}).exps=true;(function () {var x=stmt('do', function () {funct['(breakage)'] += 1;funct['(loopage)'] += 1;this.first=block(true);advance('while');var t=nexttoken;nonadjacent(token, t);advance('(');nospace();expression(20);if (nexttoken.id === '=') {if (!option.boss)\nwarning(\"Expected a conditional expression and instead saw an assignment.\");advance('=');expression(20);}advance(')', t);nospace(prevtoken, token);funct['(breakage)'] -= 1;funct['(loopage)'] -= 1;return this;});x.labelled=true;x.exps=true;}());blockstmt('for', function () {var s, t=nexttoken;funct['(breakage)'] += 1;funct['(loopage)'] += 1;advance('(');nonadjacent(this, t);nospace();if (peek(nexttoken.id === 'var' ? 1:0).id === 'in') {if (nexttoken.id === 'var') {advance('var');varstatement.fud.call(varstatement, true);} else {switch (funct[nexttoken.value]) {case 'unused':\nfunct[nexttoken.value]='var';break;case 'var':\nbreak;default:\nwarning(\"Bad for in variable '{a}'.\",\nnexttoken, nexttoken.value);}advance();}advance('in');expression(20);advance(')', t);s=block(true, true);if (option.forin && s && (s.length > 1 || typeof s[0] !== 'object' ||\ns[0].value !== 'if')) {warning(\"The body of a for in should be wrapped in an if statement to filter \" +\n\"unwanted properties from the prototype.\", this);}funct['(breakage)'] -= 1;funct['(loopage)'] -= 1;return this;} else {if (nexttoken.id !== ';') {if (nexttoken.id === 'var') {advance('var');varstatement.fud.call(varstatement);} else {for (;;) {expression(0, 'for');if (nexttoken.id !== ',') {break;}comma();}}}nolinebreak(token);advance(';');if (nexttoken.id !== ';') {expression(20);if (nexttoken.id === '=') {if (!option.boss)\nwarning(\"Expected a conditional expression and instead saw an assignment.\");advance('=');expression(20);}}nolinebreak(token);advance(';');if (nexttoken.id === ';') {error(\"Expected '{a}' and instead saw '{b}'.\",\nnexttoken, ')', ';');}if (nexttoken.id !== ')') {for (;;) {expression(0, 'for');if (nexttoken.id !== ',') {break;}comma();}}advance(')', t);nospace(prevtoken, token);block(true, true);funct['(breakage)'] -= 1;funct['(loopage)'] -= 1;return this;}}).labelled=true;stmt('break', function () {var v=nexttoken.value;if (funct['(breakage)'] === 0)\nwarning(\"Unexpected '{a}'.\", nexttoken, this.value);if (!option.asi)\nnolinebreak(this);if (nexttoken.id !== ';') {if (token.line === nexttoken.line) {if (funct[v] !== 'label') {warning(\"'{a}' is not a statement label.\", nexttoken, v);} else if (scope[v] !== funct) {warning(\"'{a}' is out of scope.\", nexttoken, v);}this.first=nexttoken;advance();}}reachable('break');return this;}).exps=true;stmt('continue', function () {var v=nexttoken.value;if (funct['(breakage)'] === 0)\nwarning(\"Unexpected '{a}'.\", nexttoken, this.value);if (!option.asi)\nnolinebreak(this);if (nexttoken.id !== ';') {if (token.line === nexttoken.line) {if (funct[v] !== 'label') {warning(\"'{a}' is not a statement label.\", nexttoken, v);} else if (scope[v] !== funct) {warning(\"'{a}' is out of scope.\", nexttoken, v);}this.first=nexttoken;advance();}} else if (!funct['(loopage)']) {warning(\"Unexpected '{a}'.\", nexttoken, this.value);}reachable('continue');return this;}).exps=true;stmt('return', function () {if (this.line === nexttoken.line) {if (nexttoken.id === '(regexp)')\nwarning(\"Wrap the /regexp/ literal in parens to disambiguate the slash operator.\");if (nexttoken.id !== ';' && !nexttoken.reach) {nonadjacent(token, nexttoken);if (peek().value === \"=\" && !option.boss) {warningAt(\"Did you mean to return a conditional instead of an assignment?\",\ntoken.line, token.character + 1);}this.first=expression(0);}} else if (!option.asi) {nolinebreak(this);}reachable('return');return this;}).exps=true;stmt('throw', function () {nolinebreak(this);nonadjacent(token, nexttoken);this.first=expression(20);reachable('throw');return this;}).exps=true;reserve('class');reserve('const');reserve('enum');reserve('export');reserve('extends');reserve('import');reserve('super');reserve('let');reserve('yield');reserve('implements');reserve('interface');reserve('package');reserve('private');reserve('protected');reserve('public');reserve('static');function jsonValue() {function jsonObject() {var o={}, t=nexttoken;advance('{');if (nexttoken.id !== '}') {for (;;) {if (nexttoken.id === '(end)') {error(\"Missing '}' to match '{' from line {a}.\",\nnexttoken, t.line);} else if (nexttoken.id === '}') {warning(\"Unexpected comma.\", token);break;} else if (nexttoken.id === ',') {error(\"Unexpected comma.\", nexttoken);} else if (nexttoken.id !== '(string)') {warning(\"Expected a string and instead saw {a}.\",\nnexttoken, nexttoken.value);}if (o[nexttoken.value] === true) {warning(\"Duplicate key '{a}'.\",\nnexttoken, nexttoken.value);} else if ((nexttoken.value === '__proto__' &&\n!option.proto) || (nexttoken.value === '__iterator__' &&\n!option.iterator)) {warning(\"The '{a}' key may produce unexpected results.\",\nnexttoken, nexttoken.value);} else {o[nexttoken.value]=true;}advance();advance(':');jsonValue();if (nexttoken.id !== ',') {break;}advance(',');}}advance('}');}function jsonArray() {var t=nexttoken;advance('[');if (nexttoken.id !== ']') {for (;;) {if (nexttoken.id === '(end)') {error(\"Missing ']' to match '[' from line {a}.\",\nnexttoken, t.line);} else if (nexttoken.id === ']') {warning(\"Unexpected comma.\", token);break;} else if (nexttoken.id === ',') {error(\"Unexpected comma.\", nexttoken);}jsonValue();if (nexttoken.id !== ',') {break;}advance(',');}}advance(']');}switch (nexttoken.id) {case '{':\njsonObject();break;case '[':\njsonArray();break;case 'true':\ncase 'false':\ncase 'null':\ncase '(number)':\ncase '(string)':\nadvance();break;case '-':\nadvance('-');if (token.character !== nexttoken.from) {warning(\"Unexpected space after '-'.\", token);}adjacent(token, nexttoken);advance('(number)');break;default:\nerror(\"Expected a JSON value.\", nexttoken);}}var itself=function (s, o, g) {var a, i, k, x,\noptionKeys,\nnewOptionObj={};JSHINT.errors=[];JSHINT.undefs=[];predefined=Object.create(standard);combine(predefined, g || {});if (o) {a=o.predef;if (a) {if (Array.isArray(a)) {for (i=0; i < a.length; i += 1) {predefined[a[i]]=true;}} else if (typeof a === 'object') {k=Object.keys(a);for (i=0; i < k.length; i += 1) {predefined[k[i]]=!!a[k[i]];}}}optionKeys=Object.keys(o);for (x=0; x < optionKeys.length; x++) {newOptionObj[optionKeys[x]]=o[optionKeys[x]];}}option=newOptionObj;option.indent=option.indent || 4;option.maxerr=option.maxerr || 50;tab='';for (i=0; i < option.indent; i += 1) {tab += ' ';}indent=1;global=Object.create(predefined);scope=global;funct={'(global)': true,\n'(name)': '(global)',\n'(scope)': scope,\n'(breakage)': 0,\n'(loopage)': 0};functions=[funct];urls=[];stack=null;member={};membersOnly=null;implied={};inblock=false;lookahead=[];jsonmode=false;warnings=0;lex.init(s);prereg=true;directive={};prevtoken=token=nexttoken=syntax['(begin)'];for (var name in o) {if (is_own(o, name)) {checkOption(name, token);}}assume();combine(predefined, g || {});comma.first=true;try {advance();switch (nexttoken.id) {case '{':\ncase '[':\noption.laxbreak=true;jsonmode=true;jsonValue();break;default:\ndirectives();if (directive[\"use strict\"] && !option.globalstrict) {warning(\"Use the function form of \\\"use strict\\\".\", prevtoken);}statements();}advance('(end)');var markDefined=function (name, context) {do {if (typeof context[name] === 'string') {if (context[name] === 'unused')\ncontext[name]='var';else if (context[name] === 'unction')\ncontext[name]='closure';return true;}context=context['(context)'];} while (context);return false;};var clearImplied=function (name, line) {if (!implied[name])\nreturn;var newImplied=[];for (var i=0; i < implied[name].length; i += 1) {if (implied[name][i] !== line)\nnewImplied.push(implied[name][i]);}if (newImplied.length === 0)\ndelete implied[name];else\nimplied[name]=newImplied;};for (i=0; i < JSHINT.undefs.length; i += 1) {k=JSHINT.undefs[i].slice(0);if (markDefined(k[2].value, k[0])) {clearImplied(k[2].value, k[2].line);} else {warning.apply(warning, k.slice(1));}}} catch (e) {if (e) {var nt=nexttoken || {};JSHINT.errors.push({raw:e.raw,\nreason:e.message,\nline:e.line || nt.line,\ncharacter:e.character || nt.from}, null);}}return JSHINT.errors.length === 0;};itself.data=function () {var data={ functions: [], options: option }, fu, globals, implieds=[], f, i, j,\nmembers=[], n, unused=[], v;if (itself.errors.length) {data.errors=itself.errors;}if (jsonmode) {data.json=true;}for (n in implied) {if (is_own(implied, n)) {implieds.push({name: n,\nline: implied[n]});}}if (implieds.length > 0) {data.implieds=implieds;}if (urls.length > 0) {data.urls=urls;}globals=Object.keys(scope);if (globals.length > 0) {data.globals=globals;}for (i=1; i < functions.length; i += 1) {f=functions[i];fu={};for (j=0; j < functionicity.length; j += 1) {fu[functionicity[j]]=[];}for (n in f) {if (is_own(f, n) && n.charAt(0) !== '(') {v=f[n];if (v === 'unction') {v='unused';}if (Array.isArray(fu[v])) {fu[v].push(n);if (v === 'unused') {unused.push({name: n,\nline: f['(line)'],\n'function': f['(name)']});}}}}for (j=0; j < functionicity.length; j += 1) {if (fu[functionicity[j]].length === 0) {delete fu[functionicity[j]];}}fu.name=f['(name)'];fu.param=f['(params)'];fu.line=f['(line)'];fu.last=f['(last)'];data.functions.push(fu);}if (unused.length > 0) {data.unused=unused;}members=[];for (n in member) {if (typeof member[n] === 'number') {data.member=member;break;}}return data;};itself.report=function (option) {var data=itself.data();var a=[], c, e, err, f, i, k, l, m='', n, o=[], s;function detail(h, array) {var b, i, singularity;if (array) {o.push('<div><i>' + h + '</i> ');array=array.sort();for (i=0; i < array.length; i += 1) {if (array[i] !== singularity) {singularity=array[i];o.push((b ? ', ':'') + singularity);b=true;}}o.push('</div>');}}if (data.errors || data.implieds || data.unused) {err=true;o.push('<div id=errors><i>Error:</i>');if (data.errors) {for (i=0; i < data.errors.length; i += 1) {c=data.errors[i];if (c) {e=c.evidence || '';o.push('<p>Problem' + (isFinite(c.line) ? ' at line ' +\nc.line + ' character ' + c.character:'') +\n': ' + c.reason.entityify() +\n'</p><p class=evidence>' +\n(e && (e.length > 80 ? e.slice(0, 77) + '...' :\ne).entityify()) + '</p>');}}}if (data.implieds) {s=[];for (i=0; i < data.implieds.length; i += 1) {s[i]='<code>' + data.implieds[i].name + '</code>&nbsp;<i>' +\ndata.implieds[i].line + '</i>';}o.push('<p><i>Implied global:</i> ' + s.join(', ') + '</p>');}if (data.unused) {s=[];for (i=0; i < data.unused.length; i += 1) {s[i]='<code><u>' + data.unused[i].name + '</u></code>&nbsp;<i>' +\ndata.unused[i].line + '</i> <code>' +\ndata.unused[i]['function'] + '</code>';}o.push('<p><i>Unused variable:</i> ' + s.join(', ') + '</p>');}if (data.json) {o.push('<p>JSON: bad.</p>');}o.push('</div>');}if (!option) {o.push('<br><div id=functions>');if (data.urls) {detail(\"URLs<br>\", data.urls, '<br>');}if (data.json && !err) {o.push('<p>JSON: good.</p>');} else if (data.globals) {o.push('<div><i>Global</i> ' +\ndata.globals.sort().join(', ') + '</div>');} else {o.push('<div><i>No new global variables introduced.</i></div>');}for (i=0; i < data.functions.length; i += 1) {f=data.functions[i];o.push('<br><div class=function><i>' + f.line + '-' +\nf.last + '</i> ' + (f.name || '') + '(' +\n(f.param ? f.param.join(', '):'') + ')</div>');detail('<big><b>Unused</b></big>', f.unused);detail('Closure', f.closure);detail('Variable', f['var']);detail('Exception', f.exception);detail('Outer', f.outer);detail('Global', f.global);detail('Label', f.label);}if (data.member) {a=Object.keys(data.member);if (a.length) {a=a.sort();m='<br><pre id=members>/*members ';l=10;for (i=0; i < a.length; i += 1) {k=a[i];n=k.name();if (l + n.length > 72) {o.push(m + '<br>');m='    ';l=1;}l += n.length + 2;if (data.member[k] === 1) {n='<i>' + n + '</i>';}if (i < a.length - 1) {n += ', ';}m += n;}o.push(m + '<br>*/</pre>');}o.push('</div>');}}return o.join('');};itself.jshint=itself;return itself;}());if (typeof exports === 'object' && exports)\nexports.JSHINT=JSHINT;")

(provide 'flyjs-wsh-bundle)

;;; flyjs-wsh-bundle.el ends here
